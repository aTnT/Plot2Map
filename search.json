[{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"agb","dir":"Articles","previous_headings":"","what":"AGB","title":"Introduction","text":"-ground biomass (AGB) total mass material stored living stems, branches leaves vegetation, often described biomass density, units mass per unit area t/ha. major efforts map forest AGB using Earth Observation (EO) data, maps anticipated near-future new missions dedicated measuring AGB. Current AGB maps derived using different methods data sources, leading significant disagreements reduce value specific applications estimating global national carbon stocks. addition, maps specific individual error properties, rendering unreliable biomass change analysis, despite representing different epochs.","code":""},{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"plot-data","dir":"Articles","previous_headings":"","what":"Plot Data","title":"Introduction","text":"Assessment accuracy AGB map take account random bias errors map reference data used validate . Reference data commonly used situ plot measurements (plot data), whose uncertainty can quantified using specific AGB validation protocols. plot accuracy uncertainty local regional scales addressed, continental global scale AGB maps hampered lack global reference dataset.","code":""},{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"plot-uncertainty","dir":"Articles","previous_headings":"","what":"Plot Uncertainty","title":"Introduction","text":"consequent lack consistently sampled reference AGB dataset consequences statistical inference, possible certain assumptions requires data accompanied uncertainty estimates. Using collection plot datasets uncertainty estimates across globe offers several opportunities : revealing regional patterns may explainable environmental /ecological variables; investigate bias develop bias reduction methods; finally evaluating extent plot-map differences can attributed map error.","code":""},{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"map-bias","dir":"Articles","previous_headings":"","what":"Map Bias","title":"Introduction","text":"key principle climate monitoring random errors time-dependent biases satellite EO derived products identified. generally map users prefer AGB maps unbiased spatially explicit uncertainty information, including spatial autocorrelation.","code":""},{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"the-plot2map-package","dir":"Articles","previous_headings":"","what":"The Plot2Map Package","title":"Introduction","text":"address issues, comprehensive framework assessing harmonizing global AGB maps developed package. framework, incorporated package, aims quantify reduce biases AGB maps providing spatially explicit uncertainty information. Plot2Map framework incorporates three key components: Plot data preparation: global collection plot data carefully selected pre-processed minimize temporal spatial mismatches AGB maps. Uncertainty quantification: framework assesses various sources uncertainty plot-level AGB estimates, including measurement errors, allometric model errors, sampling errors. Map bias assessment correction: Using prepared plot data, framework quantifies biases global AGB maps models biases using spatial covariates.","code":""},{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"installation","dir":"Articles","previous_headings":"The Plot2Map Package","what":"Installation","title":"Introduction","text":"can install Plot2Map GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"aTnT/Plot2Map\")  library(Plot2Map)"},{"path":"https://atnt.github.io/Plot2Map/articles/introduction.html","id":"vignettes","dir":"Articles","previous_headings":"The Plot2Map Package","what":"Vignettes","title":"Introduction","text":"following vignettes, Plot2Map framework components addressed showcasing practical examples typical workflow: Plot data preparation. Uncertainty quantification. Map bias assessment correction.","code":""},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plot data preparation","text":"page showcase different user data formats plot estimates AGB, refereed plot data, possible used Plot2Map workflow.","code":""},{"path":[]},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"point-data-formatted-dataframe","dir":"Articles","previous_headings":"Plot data formats","what":"Point data formatted dataframe","title":"Plot data preparation","text":"case already AGB estimate user. format exemplified sample plots dataframe available package accessible : format correspond dataframe containing sample plots unique plot ID, longitude latitude point data, estimated Ground Biomass t/ha, average year inventory, plot size ha.","code":"head(plots)"},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"point-data-unformatted-dataframe","dir":"Articles","previous_headings":"Plot data formats","what":"Point data unformatted dataframe","title":"Plot data preparation","text":"case also dataframe similar format previous case, unformatted data user asked specific column index required plot variables unique plot ID, longitude, latitude, AGB plot, plot size, inventory year. can exemplified : following step request user select requested columns: Note user input get similar data format previous section: format correspond dataframe containing sample plots ID, longitude latitude point data, estimated Ground Biomass t/ha, average year plot survey, plot size ha.","code":"unformatted_plots <- utils::read.csv(sample_file(\"SampleUnformattedPlots.csv\")) head(unformatted_plots) #      Provincia                          Estrato.Florestal id_parcela Ycoordinate Xcoordinate Vt..m.3.ha. # 1 Cabo Delgado Floresta (semi-) decidua, incluindo Miombo  CD0772003   -10.60656    40.53664       39.90 # 2 Cabo Delgado Floresta (semi-) decidua, incluindo Miombo  CD0772002   -10.60657    40.53572       24.65 # 3 Cabo Delgado Floresta (semi-) decidua, incluindo Miombo  CD0770543   -10.60666    40.52744        4.09 # 4 Cabo Delgado Floresta (semi-) decidua, incluindo Miombo  CD0770542   -10.60667    40.52652       20.06 # 5 Cabo Delgado Floresta (semi-) decidua, incluindo Miombo  CD0772004   -10.60747    40.53664        0.00 # 6 Cabo Delgado Floresta (semi-) decidua, incluindo Miombo  CD0772001   -10.60747    40.53573       64.15 #   Vc..m.3.ha. AGB..ton.ha. BGB..ton.ha. year size # 1        2.53        32.61        21.73 2016  0.1 # 2        0.77        21.44        13.32 2016  0.1 # 3        0.00         4.41         2.96 2016  0.1 # 4        2.38        17.77        10.56 2016  0.1 # 5        0.00         0.00         0.00 2016  0.1 # 6        0.97        77.74        27.38 2016  0.1 formatted_plots <- RawPlots(unformatted_plots) # Which column is your unique Plot ID?  #  #  1: Manual entry        2: Provincia           3: Estrato.Florestal #  4: id_parcela          5: Ycoordinate         6: Xcoordinate       #  7: Vt..m.3.ha.         8: Vc..m.3.ha.         9: AGB..ton.ha.      # 10: BGB..ton.ha.       11: year               12: size              #  #  # Selection: 4 # Which column is your plot AGB?  #  #  1: Manual entry        2: Provincia           3: Estrato.Florestal #  4: id_parcela          5: Ycoordinate         6: Xcoordinate       #  7: Vt..m.3.ha.         8: Vc..m.3.ha.         9: AGB..ton.ha.      # 10: BGB..ton.ha.       11: year               12: size              #  #  # Selection: 9 # Select longitude column  #  #  1: Manual entry        2: Provincia           3: Estrato.Florestal #  4: id_parcela          5: Ycoordinate         6: Xcoordinate       #  7: Vt..m.3.ha.         8: Vc..m.3.ha.         9: AGB..ton.ha.      # 10: BGB..ton.ha.       11: year               12: size              #  #  # Selection: 6 # Which column is your latitude?  #  #  1: Manual entry        2: Provincia           3: Estrato.Florestal #  4: id_parcela          5: Ycoordinate         6: Xcoordinate       #  7: Vt..m.3.ha.         8: Vc..m.3.ha.         9: AGB..ton.ha.      # 10: BGB..ton.ha.       11: year               12: size              #  #  # Selection: 5 # Select plot size column  #  #  1: Manual entry        2: Provincia           3: Estrato.Florestal #  4: id_parcela          5: Ycoordinate         6: Xcoordinate       #  7: Vt..m.3.ha.         8: Vc..m.3.ha.         9: AGB..ton.ha.      # 10: BGB..ton.ha.       11: year               12: size              #  #  # Selection: 12 # Select year column  #  #  1: Manual entry        2: Provincia           3: Estrato.Florestal #  4: id_parcela          5: Ycoordinate         6: Xcoordinate       #  7: Vt..m.3.ha.         8: Vc..m.3.ha.         9: AGB..ton.ha.      # 10: BGB..ton.ha.       11: year               12: size              #  #  # Selection: 11 tail(formatted_plots) #      PLOT_ID  POINT_X   POINT_Y AGB_T_HA SIZE_HA FEZ GEZ AVG_YEAR # 3267      21 32.35752 -26.54318    54.13     0.1  NA  NA     2016 # 3268      24 32.35853 -26.54318    13.90     0.1  NA  NA     2016 # 3269      12 32.75884 -26.65187    92.66     0.1  NA  NA     2016 # 3270      13 32.75984 -26.65187   112.87     0.1  NA  NA     2016 # 3271      11 32.75884 -26.65277    56.08     0.1  NA  NA     2016 # 3272      14 32.75984 -26.65277    65.59     0.1  NA  NA     2016"},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"plot-corner-coordinates","dir":"Articles","previous_headings":"Plot data formats","what":"Plot corner coordinates","title":"Plot data preparation","text":"plot data format found Labriere et al.Â 2018 sample data. contains corner coordinates bounding box defining plot:","code":"plots_corners <- utils::read.csv(sample_file(\"PolyTropiSAR.csv\")) # Labriere et al. 2018 plots sample data head(plots_corners) #     id  POINT_X  POINT_Y  X # 1 NOU01 312514.3 449724.3 NA # 2 NOU01 312517.6 449824.2 NA # 3 NOU02 313704.3 451320.5 NA # 4 NOU02 313752.2 451408.3 NA # 5 NOU02 313800.0 451496.1 NA # 6 NOU02 313847.9 451583.9 NA  plots_AGB <-  utils::read.csv(sample_file(\"PolyTropiAGB.csv\")) # plot-level AGB head(plots_AGB) #   PLOT_ID AVG_YEAR AGB_T_HA # 1   NOU01     2010   431.90 # 2   NOU02     2010   368.41 # 3   NOU03     2010   525.65 # 4   NOU04     2010   429.87 # 5   NOU05     2010   234.60 # 6   NOU06     2010   288.10  SRS <- 32622 # plot data source spatial reference system # Converting coordinates from source SRS (32622) to EPSG:4326 / WGS84 plots_corners_AGB$AGB_T_HA <- plots_AGB$AGB_T_HA plots_corners_AGB$AVG_YEAR <- plots_AGB$AVG_YEAR   head(plots_corners_AGB) #       ID PLOT_ID         SIZE_HA   POINT_X  POINT_Y AGB_T_HA AVG_YEAR # NOU01  1   NOU01  2.0000014 [ha] -52.68839 4.067844   431.90     2010 # NOU02  1   NOU02 10.0000058 [ha] -52.67643 4.085602   368.41     2010 # NOU03  1   NOU03  6.0000008 [ha] -52.68235 4.039235   525.65     2010 # NOU04  1   NOU04 12.0000037 [ha] -52.68352 4.082891   429.87     2010 # NOU05  1   NOU05  0.2499999 [ha] -52.67710 4.041068   234.60     2010 # NOU06  1   NOU06  0.2499998 [ha] -52.67789 4.039038   288.10     2010"},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"plot-data-contains-tree-level-measurements","dir":"Articles","previous_headings":"Plot data formats","what":"Plot data contains tree-level measurements","title":"Plot data preparation","text":"format plot data contains tree-level allometric measurements used estimate mean AGB standard deviation plot ID, using BIOMASS packageâs height-diameter model:","code":"# Formatted data example plotsTree <- utils::read.csv(sample_file(\"SampleTree.csv\")) head(plotsTree) #     id      genus    species  diameter  size                 fez      gez year # 1 BSP1 Terminalia  bellirica  3.501409 10000 tropical rainforest tropical 1996 # 2 BSP1   Ziziphus   oenoplia  3.819719 10000 tropical rainforest tropical 1996 # 3 BSP1    Aporosa lindleyana 16.870424 10000 tropical rainforest tropical 1996 # 4 BSP1      Ixora  brachiata  4.138029 10000 tropical rainforest tropical 1996 # 5 BSP1   Wrightia    arborea  5.411268 10000 tropical rainforest tropical 1996 # 6 BSP1      Ixora  brachiata  3.183099 10000 tropical rainforest tropical 1996  xyTree <- utils::read.csv(sample_file(\"SampleTreeXY.csv\")) head(xyTree) #     id        y        x # 1 BSP1 14.36806 74.91944 # 2 BSP1 14.36806 74.91944 # 3 BSP1 14.36806 74.91944 # 4 BSP1 14.36806 74.91944 # 5 BSP1 14.36806 74.91944 # 6 BSP1 14.36806 74.91944  # Unformatted data example TreeRaw <- utils::read.csv(sample_file(\"KarnatakaForest.csv\")) head(TreeRaw) #   plotId     treeId     family       genus        species     d_cm      lat     long size_m2 year # 1   BSP1   BSP1_248 Clusiaceae    Garcinia         indica 3.183099 14.36806 74.91944   10000 1998 # 2   BSP1   BSP1_269  Rubiaceae       Ixora      brachiata 3.183099 14.36806 74.91944   10000 1998 # 3   BSP1 BSP1_303_B  Rubiaceae       Meyna      laxiflora 3.183099 14.36806 74.91944   10000 1998 # 4   BSP1    BSP1_29  Lauraceae Alseodaphne semecarpifolia 3.501409 14.36806 74.91944   10000 1998 # 5   BSP1    BSP1_30  Lauraceae Alseodaphne semecarpifolia 3.501409 14.36806 74.91944   10000 1998 # 6   BSP1    BSP1_31  Lauraceae Alseodaphne semecarpifolia 3.501409 14.36806 74.91944   10000 1998  rawTree <- RawPlotsTree(TreeRaw) # User is be asked to select the requested columns  plotTree <- rawTree[[1]] head(plotTree) #   id       genus        species diameter  size fez gez year # 1 11    Garcinia         indica 3.183099 10000  NA  NA 1998 # 2 11       Ixora      brachiata 3.183099 10000  NA  NA 1998 # 3 11       Meyna      laxiflora 3.183099 10000  NA  NA 1998 # 4 11 Alseodaphne semecarpifolia 3.501409 10000  NA  NA 1998 # 5 11 Alseodaphne semecarpifolia 3.501409 10000  NA  NA 1998 # 6 11 Alseodaphne semecarpifolia 3.501409 10000  NA  NA 1998  xyTree <- rawTree[[2]] head(xyTree) #   id        x        y # 1 11 74.91944 14.36806 # 2 11 74.91944 14.36806 # 3 11 74.91944 14.36806 # 4 11 74.91944 14.36806 # 5 11 74.91944 14.36806 # 6 11 74.91944 14.36806  # Calculate mean AGB and SD by PLOT_ID using BIOMASS package's height-diameter model plots_trees_agb_sd <- sd_tree(plotTree, xyTree, \"India\") # The reference dataset contains 289 wood density values # Your taxonomic table contains 122 taxa # No tree height data found in original plot data. Calculating height using BIOMASS height-diameter model. # Warning message: # In BIOMASS::getWoodDensity(genus = plot$genus, species = plot$species,  : #   DRYAD data only stored 289 wood density values in your region of interest. You could provide additional wood densities (parameter addWoodDensityData) or widen your region (region=\"World\")  print(plots_trees_agb_sd) #    PLOT_ID  POINT_X  POINT_Y SIZE_HA AVG_YEAR   AGB_T_HA    sdTree # 1        1 74.91944 14.36806       1     1998 185.527727 12.248335 # 2        2 74.62778 15.16667       1     1998 301.968606 19.298196 # 3        3 74.63667 14.24944       1     1998 160.733560 17.332449 # 4        4 74.66806 14.24528       1     1998 351.992736 20.154294 # 5        5 75.11806 14.28333       1     1998 305.638906 20.040947 # 6        6 75.13583 14.28389       1     1998 425.775593 38.229345 # 7        7 74.87222 14.42500       1     1998 234.641786 13.436895 # 8        8 75.30806 14.44583       1     1998   5.398583  1.654017 # 9        9 75.17222 14.34861       1     1998  81.813532  9.714730 # 10      10 75.28639 14.08750       1     1998  73.081759  6.591937"},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"plot-data-contains-tree-level-measurements-and-nested-plots-sub-plots","dir":"Articles","previous_headings":"Plot data formats","what":"Plot data contains tree-level measurements and nested plots (sub-plots)","title":"Plot data preparation","text":"format plot data similar previous one contains nested plot (sub-plots) data. Letâs exemplify using following sample shapefile:","code":"cent <- sf::st_read(sample_file(\"SampleCentroid.shp\")) # Sub-plot centroids  print(cent) # Simple feature collection with 5 features and 23 fields # Geometry type: POINT # Dimension:     XY # Bounding box:  xmin: 272004.1 ymin: 350052.3 xmax: 272092.6 ymax: 350087.1 # Projected CRS: OSGB36 / British National Grid #                               POINT_GUID     GRID_REF POINT_NUMB VISIT_STAT REASON_FOR PEG_LEFT # 1 {89B25687-EDA0-4704-B00D-93EDDA162779} sh7202950089          1          3          1        1 # 2 {22E69595-D9BE-4BB1-8660-E2E7457E2068} sh7201850062          1          3          1        1 # 3 {B4980FC2-4DA9-4897-93E2-07D03233D2F4} sh7209250061          1          3          1        1 # 4 {224FD85B-6B64-4075-B51F-BA2D390AB4EF} sh7208750054          1          3          1        1 # 5 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} sh7200750088          1          3          1        1 #   PEG_NOT_LE                                  PEG_DESCRI                              PLOT_GUID OBJECTID # 1          0                   NW of v. slight open area {ABC3BE55-35CC-430B-A9C2-5BA9437286B6}        1 # 2          0                   5m N of edge of mossy gap {E76DFF7B-39B4-45A5-85B8-F7BC38A429D5}        2 # 3          0      W of large SS in shallow plough furrow {6EFDF9E3-F49D-4ED1-8BEB-F53D2A896BBA}        3 # 4          0 in plough ditch with slight gap in row to E {47011DCB-7ADF-4C3D-B621-74AA98265CA4}        4 # 5          0                      N from small mossy gap {EE0EF576-D6FF-4603-864F-23DC93C6A74D}        5 #   INACCESSIB ACCESS_STA GENERATE_N HEIGHT TREE_COUNT ESTIMATED_ TREE_COU_1 RECORD_STA FIELDS_STA # 1          0          1          0      0          0          0          0        new       <NA> # 2          0          1          0      0          0          0          0        new       <NA> # 3          0          1          0      0          0          0          0        new       <NA> # 4          0          1          0      0          0          0          0        new       <NA> # 5          0          1          0      0          0          0          0        new       <NA> #   RESURVEY_P FROZEN POINT_STUM ACCESS_COM                  geometry # 1          0      0         21       <NA> POINT (272028.2 350085.6) # 2          0      0         49       <NA> POINT (272013.6 350060.7) # 3          0      0          8       <NA> POINT (272092.6 350063.9) # 4          0      0         10       <NA>   POINT (272086 350052.3) # 5          0      0         22       <NA> POINT (272004.1 350087.1)  tree <- read.csv(sample_file(\"SampleTreeNested.csv\")) # Tree data per sub-plot str(tree) # 'data.frame': 153 obs. of  50 variables: #  $ TREE_GUID..              : chr  \"{90106646-EC43-4E04-B3DB-F4DBE0F37FD3}\" \"{3B18375F-B224-420E-92D0-0D7A0AC51B4A}\" \"{BCADC7ED-3C2B-41E1-9118-D3A74AAE8353}\" \"{DE39854B-074C-4CAE-B32C-42AC66063D68}\" ... #  $ TREE_TYPE                : chr  \"1\" \"1\" \"1\" \"1\" ... #  $ SPIS                     : chr  \"SS\" \"SS\" \"SS\" \"SS\" ... #  $ STRY                     : chr  \"4\" \"4\" \"4\" \"4\" ... #  $ TREE_ALIVE               : chr  \"1\" \"1\" \"1\" \"1\" ... #  $ DEAD_TREE_CAUSE          : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ GROUP_TYPE               : chr  \"1\" \"1\" \"1\" \"1\" ... #  $ CONIFER_STEM_STRAIGHTNESS: chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ LOWEST_DEAD_BRANCH_HEIGHT: chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ POINT_GUID..             : chr  \"{197A519B-7AF1-4374-BDD8-81FA03CCC54F}\" \"{197A519B-7AF1-4374-BDD8-81FA03CCC54F}\" \"{197A519B-7AF1-4374-BDD8-81FA03CCC54F}\" \"{197A519B-7AF1-4374-BDD8-81FA03CCC54F}\" ... #  $ TREE_OR_STUMP            : int  1 1 1 1 1 1 1 1 1 1 ... #  $ DECAY_CLASS              : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ STUMP_DECAY_CLASS        : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ COPPICE_STOOL            : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ LINKED_TREE_GUID..       : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ TREE_LOCATION            : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ OBJECTID..               : int  34 24 25 26 27 28 29 30 31 23 ... #  $ OUTSIDE_PLOT             : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ HEIGHT                   : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ TREE_HEIGHT              : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ UC_HEIGHT                : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ LC_HEIGHT                : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ SHAPE..                  : chr  \"Point\" \"Point\" \"Point\" \"Point\" ... #  $ DBH                      : chr  \"11\" \"11\" \"10\" \"12\" ... #  $ DIAMETER_ONE             : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ DIAMETER_TWO             : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ SPECIES_GROUP            : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ EXCESSIVE_LEAN           : chr  \"0\" \"0\" \"0\" \"0\" ... #  $ WINDSNAPPED              : chr  \"0\" \"0\" \"0\" \"0\" ... #  $ COPPICE_STOOL_GUID..     : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ CROWN_DIAMETER_ONE       : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ CROWN_DIAMETER_TWO       : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RECORD_STATUS            : chr  \"new\" \"new\" \"new\" \"new\" ... #  $ FIELDS_STATUS            : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ TIMBER_HEIGHT            : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ TREE_RESURVEY            : int  1 1 1 1 1 1 1 1 1 1 ... #  $ GOOD_FELLING_PRACTICE    : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ COPPICE_STOOL_DIAMETER   : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_DBH                : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_HEIGHT             : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_CROWN_DIAMETER_1   : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_CROWN_DIAMETER_2   : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_DIAMETER_ONE       : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_STUMP_HEIGHT       : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ STUMP_TYPE               : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ RANGE_DIAMETER_TWO       : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ SIZE_RANK                : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ PERCENTAGE_HEIGHT_REM    : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ STUMP_AGE                : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ... #  $ IS_STUMP_AGE             : chr  \"<Null>\" \"<Null>\" \"<Null>\" \"<Null>\" ...  TreeData <- Nested(cent, tree) # which column is your unique Plot ID?  #  #  1: TREE_GUID..                 2: TREE_TYPE                   3: SPIS                      #  4: STRY                        5: TREE_ALIVE                  6: DEAD_TREE_CAUSE           #  7: GROUP_TYPE                  8: CONIFER_STEM_STRAIGHTNESS   9: LOWEST_DEAD_BRANCH_HEIGHT # 10: POINT_GUID..               11: TREE_OR_STUMP              12: DECAY_CLASS               # 13: STUMP_DECAY_CLASS          14: COPPICE_STOOL              15: LINKED_TREE_GUID..        # 16: TREE_LOCATION              17: OBJECTID..                 18: OUTSIDE_PLOT              # 19: HEIGHT                     20: TREE_HEIGHT                21: UC_HEIGHT                 # 22: LC_HEIGHT                  23: SHAPE..                    24: DBH                       # 25: DIAMETER_ONE               26: DIAMETER_TWO               27: SPECIES_GROUP             # 28: EXCESSIVE_LEAN             29: WINDSNAPPED                30: COPPICE_STOOL_GUID..      # 31: CROWN_DIAMETER_ONE         32: CROWN_DIAMETER_TWO         33: RECORD_STATUS             # 34: FIELDS_STATUS              35: TIMBER_HEIGHT              36: TREE_RESURVEY             # 37: GOOD_FELLING_PRACTICE      38: COPPICE_STOOL_DIAMETER     39: RANGE_DBH                 # 40: RANGE_HEIGHT               41: RANGE_CROWN_DIAMETER_1     42: RANGE_CROWN_DIAMETER_2    # 43: RANGE_DIAMETER_ONE         44: RANGE_STUMP_HEIGHT         45: STUMP_TYPE                # 46: RANGE_DIAMETER_TWO         47: SIZE_RANK                  48: PERCENTAGE_HEIGHT_REM     # 49: STUMP_AGE                  50: IS_STUMP_AGE                #  # Selection: 10 # which column is your unique  DBH (cm)?  #  #  1: TREE_GUID..                 2: TREE_TYPE                   3: SPIS                      #  4: STRY                        5: TREE_ALIVE                  6: DEAD_TREE_CAUSE           #  7: GROUP_TYPE                  8: CONIFER_STEM_STRAIGHTNESS   9: LOWEST_DEAD_BRANCH_HEIGHT # 10: POINT_GUID..               11: TREE_OR_STUMP   plots <- MeasurementErr(plotTree, xyTree, 'Europe')           12: DECAY_CLASS               # 13: STUMP_DECAY_CLASS          14: COPPICE_STOOL              15: LINKED_TREE_GUID..        # 16: TREE_LOCATION              17: OBJECTID..                 18: OUTSIDE_PLOT              # 19: HEIGHT                     20: TREE_HEIGHT                21: UC_HEIGHT                 # 22: LC_HEIGHT                  23: SHAPE..                    24: DBH                       # 25: DIAMETER_ONE               26: DIAMETER_TWO               27: SPECIES_GROUP             # 28: EXCESSIVE_LEAN             29: WINDSNAPPED                30: COPPICE_STOOL_GUID..      # 31: CROWN_DIAMETER_ONE         32: CROWN_DIAMETER_TWO         33: RECORD_STATUS             # 34: FIELDS_STATUS              35: TIMBER_HEIGHT              36: TREE_RESURVEY             # 37: GOOD_FELLING_PRACTICE      38: COPPICE_STOOL_DIAMETER     39: RANGE_DBH                 # 40: RANGE_HEIGHT               41: RANGE_CROWN_DIAMETER_1     42: RANGE_CROWN_DIAMETER_2    # 43: RANGE_DIAMETER_ONE         44: RANGE_STUMP_HEIGHT         45: STUMP_TYPE                # 46: RANGE_DIAMETER_TWO         47: SIZE_RANK                  48: PERCENTAGE_HEIGHT_REM     # 49: STUMP_AGE                  50: IS_STUMP_AGE                #  # Selection: 24 # which column is your unique Tree Height (m)?  #  #  1: TREE_GUID..                 2: TREE_TYPE                   3: SPIS                      #  4: STRY                        5: TREE_ALIVE                  6: DEAD_TREE_CAUSE           #  7: GROUP_TYPE                  8: CONIFER_STEM_STRAIGHTNESS   9: LOWEST_DEAD_BRANCH_HEIGHT # 10: POINT_GUID..               11: TREE_OR_STUMP              12: DECAY_CLASS               # 13: STUMP_DECAY_CLASS          14: COPPICE_STOOL              15: LINKED_TREE_GUID..        # 16: TREE_LOCATION              17: OBJECTID..                 18: OUTSIDE_PLOT              # 19: HEIGHT                     20: TREE_HEIGHT                21: UC_HEIGHT                 # 22: LC_HEIGHT                  23: SHAPE..                    24: DBH                       # 25: DIAMETER_ONE               26: DIAMETER_TWO               27: SPECIES_GROUP             # 28: EXCESSIVE_LEAN             29: WINDSNAPPED                30: COPPICE_STOOL_GUID..      # 31: CROWN_DIAMETER_ONE         32: CROWN_DIAMETER_TWO         33: RECORD_STATUS             # 34: FIELDS_STATUS              35: TIMBER_HEIGHT              36: TREE_RESURVEY             # 37: GOOD_FELLING_PRACTICE      38: COPPICE_STOOL_DIAMETER     39: RANGE_DBH                 # 40: RANGE_HEIGHT               41: RANGE_CROWN_DIAMETER_1     42: RANGE_CROWN_DIAMETER_2    # 43: RANGE_DIAMETER_ONE         44: RANGE_STUMP_HEIGHT         45: STUMP_TYPE                # 46: RANGE_DIAMETER_TWO         47: SIZE_RANK                  48: PERCENTAGE_HEIGHT_REM     # 49: STUMP_AGE                  50: IS_STUMP_AGE                #  # Selection: 20 # Warning: NAs introduced by coercion # Enter tree genus: Picea # Enter tree species: sitchensis # Enter plot size in m2: 100  plotTree <- TreeData[[1]] head(plotTree) #                                       id genus    species diameter size fez gez year   height # 1 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} Picea sitchensis       11  100  NA  NA 2010 11.96667 # 2 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} Picea sitchensis       11  100  NA  NA 2010 11.96667 # 3 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} Picea sitchensis       10  100  NA  NA 2010 11.96667 # 4 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} Picea sitchensis       12  100  NA  NA 2010 11.96667 # 5 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} Picea sitchensis       10  100  NA  NA 2010 11.96667 # 6 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} Picea sitchensis       13  100  NA  NA 2010 11.96667  xyTree <- TreeData[[2]] head(xyTree) #                                       id       y         x # 1 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} 53.0327 -3.910179 # 2 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} 53.0327 -3.910179 # 3 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} 53.0327 -3.910179 # 4 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} 53.0327 -3.910179 # 5 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} 53.0327 -3.910179 # 6 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} 53.0327 -3.910179  plots_trees_nested_agb_sd <- sd_tree(plotTree, xyTree, 'Europe') # The reference dataset contains 77 wood density values # Your taxonomic table contains 1 taxa # Using actual tree height from the provided plot data. # Warning message: # In BIOMASS::getWoodDensity(genus = plot$genus, species = plot$species,  : #   DRYAD data only stored 77 wood density values in your region of interest. You could provide additional wood densities (parameter addWoodDensityData) or widen your region (region=\"World\")  print(plots_trees_nested_agb_sd) #                                  PLOT_ID   POINT_X  POINT_Y SIZE_HA AVG_YEAR AGB_T_HA   sdTree # 1 {197A519B-7AF1-4374-BDD8-81FA03CCC54F} -3.910179 53.03270    0.01     2010 191.1393 27.52151 # 2 {224FD85B-6B64-4075-B51F-BA2D390AB4EF} -3.908944 53.03241    0.01     2010 243.5213 68.40316 # 3 {22E69595-D9BE-4BB1-8660-E2E7457E2068} -3.910026 53.03247    0.01     2010 302.0629 42.43342 # 4 {89B25687-EDA0-4704-B00D-93EDDA162779} -3.909820 53.03270    0.01     2010 287.5870 47.53895 # 5 {B4980FC2-4DA9-4897-93E2-07D03233D2F4} -3.908851 53.03252    0.01     2010 427.2943 90.30131"},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"lidar-reference-data","dir":"Articles","previous_headings":"Plot data formats","what":"Lidar reference data","title":"Plot data preparation","text":"Letâs see example lidar data used plot data reference. example use sample lidar data provided package:","code":"# Sample lidar data folder location: slb.agb.dir <- sample_lidar_folder(\"SustainableLandscapeBrazil_v04/SLB_AGBmaps\") slb.cv.dir <- sample_lidar_folder(\"SustainableLandscapeBrazil_v04/SLB_CVmaps\")  # Obtaining the Coeficient of Variation for each cell in the dataset: slb.cv <- RefLidar(slb.cv.dir) # Enter raster type (AGB, CV, or SD): cv # User input needed to extract PLOT_ID from filename(s)... # File(s) used to extract data: BON_A01_2018_CV_100m.tif # Enter numeric index of the first letter of PLOT_ID: 1 # Enter numeric index of the last letter of PLOT_ID: 7 # User input needed to extract YEAR from filename(s)... # File(s) used to extract data: BON_A01_2018_CV_100m.tif # Enter numeric index of the first letter of YEAR: 9 # Enter numeric index of the last letter of YEAR: 12  tail(slb.cv) #      PLOT_ID   POINT_X   POINT_Y        CV AVG_YEAR # 1135 BON_A01 -67.28973 -9.889289 0.3526200     2018 # 1136 BON_A01 -67.28882 -9.889289 0.3432670     2018 # 1137 BON_A01 -67.28791 -9.889289 0.3390796     2018 # 1138 BON_A01 -67.28700 -9.889289 0.3368152     2018 # 1170 BON_A01 -67.28882 -9.890197 0.3561200     2018 # 1171 BON_A01 -67.28791 -9.890197 0.3443113     2018  # Obtaining the Above Ground Biomass for each cell in the dataset: plots_lidar <- RefLidar(slb.agb.dir) # Enter raster type (AGB, CV, or SD): agb # User input needed to extract PLOT_ID from filename(s)... # File(s) used to extract data: BON_A01_2018_AGB_100m.tif # Enter numeric index of the first letter of PLOT_ID: 1 # Enter numeric index of the last letter of PLOT_ID: 7 # User input needed to extract YEAR from filename(s)... # File(s) used to extract data: BON_A01_2018_AGB_100m.tif # Enter numeric index of the first letter of YEAR: 9 # Enter numeric index of the last letter of YEAR: 12  tail(plots_lidar) #      PLOT_ID   POINT_X   POINT_Y      AGB AVG_YEAR # 1135 BON_A01 -67.28973 -9.889289 214.9921     2018 # 1136 BON_A01 -67.28882 -9.889289 227.4593     2018 # 1137 BON_A01 -67.28791 -9.889289 233.1332     2018 # 1138 BON_A01 -67.28700 -9.889289 236.3842     2018 # 1170 BON_A01 -67.28882 -9.890197 210.6665     2018 # 1171 BON_A01 -67.28791 -9.890197 226.1070     2018  # Calculating the Standard Deviation (SD = CV * AGB) and adding it to the final plot data: plots_lidar$sdTree <- slb.cv$CV * plots_lidar$AGB tail(plots_lidar) #      PLOT_ID   POINT_X   POINT_Y      AGB AVG_YEAR   sdTree # 1135 BON_A01 -67.28973 -9.889289 214.9921     2018 75.81052 # 1136 BON_A01 -67.28882 -9.889289 227.4593     2018 78.07928 # 1137 BON_A01 -67.28791 -9.889289 233.1332     2018 79.05070 # 1138 BON_A01 -67.28700 -9.889289 236.3842     2018 79.61778 # 1170 BON_A01 -67.28882 -9.890197 210.6665     2018 75.02255 # 1171 BON_A01 -67.28791 -9.890197 226.1070     2018 77.85120  # Add biome information plots_lidar <- BiomePair(plots_lidar)  # Add SIZE_HA column (required for calculateTotalUncertainty) plots_lidar$SIZE_HA <- 1  # For 100m resolution (100m x 100m = 1 ha)  # Rename AGB column to AGB_T_HA to match what calculateTotalUncertainty expects names(plots_lidar)[names(plots_lidar) == \"AGB\"] <- \"AGB_T_HA\"  # Calculate total uncertainty (measurement, sampling, and growth) plots_lidar_unc <- calculateTotalUncertainty(plots_lidar, map_year = 2018, map_resolution = 100) # Using existing sdTree values for tree_level data # Calculating sampling uncertainty using Rejou-Mechain approach # Loading sampling error data from package file # Calculating growth uncertainty by biome # Total uncertainty calculated for plot data of type: tree_level  head(plots_lidar_unc$data) #     PLOT_ID AGB_T_HA AVG_YEAR   sdTree      ZONE         FAO.ecozone      GEZ SIZE_HA   POINT_X   POINT_Y # 1 BON_A01 210.6665     2018 75.02255 S.America Tropical rainforest Tropical       1 -67.28882 -9.890197 # 2 BON_A01 226.1070     2018 77.85120 S.America Tropical rainforest Tropical       1 -67.28791 -9.890197 # 3 BON_A01 227.4593     2018 78.07928 S.America Tropical rainforest Tropical       1 -67.28882 -9.889289 # 4 BON_A01 233.1332     2018 79.05070 S.America Tropical rainforest Tropical       1 -67.28791 -9.889289 # 5 BON_A01 214.9921     2018 75.81052 S.America Tropical rainforest Tropical       1 -67.28973 -9.889289 # 6 BON_A01 195.5950     2018 72.22207 S.America Tropical rainforest Tropical       1 -67.29064 -9.888382 #   RS_HA ratio     sdSE sdGrowth  varPlot  sdTotal # 1     1     1 16.34357        0 5895.496 76.78213 # 2     1     1 16.34357        0 6327.922 79.54824 # 3     1     1 16.34357        0 6363.486 79.77146 # 4     1     1 16.34357        0 6516.126 80.72252 # 5     1     1 16.34357        0 6014.347 77.55222 # 6     1     1 16.34357        0 5483.140 74.04823  # See the relative contribution of different uncertainty components plots_lidar_unc$uncertainty_components # measurement    sampling      growth  #  0.91475934  0.08524066  0.00000000"},{"path":"https://atnt.github.io/Plot2Map/articles/plot-data-preparation.html","id":"plot-data-is-a-gis-file","dir":"Articles","previous_headings":"Plot data formats","what":"Plot data is a GIS file","title":"Plot data preparation","text":"Letâs see example plot data GIS file. Users know plot ID, plot size, inventory year beforehand manual entry ever missing GIS filesâ attributes. example use sample shapefile provided package: sample shapefileâs SRS / CRS already EPSG:4326 / WGS84 need transform . case isnât precede following step plots_sf <- st_transform(plots_sf, crs = 4326).","code":"plots_sf <- sf::st_read(sample_file(\"samp_shp.shp\"))  print(plots_sf) # Simple feature collection with 170 features and 3 fields # Geometry type: POINT # Dimension:     XY # Bounding box:  xmin: 137.3756 ymin: 35.16216 xmax: 137.4079 ymax: 35.19799 # Geodetic CRS:  WGS 84 # First 10 features: #    MEAN_Heigh        V       AGB                  geometry # 1    20.99811 263.2125 127.70163 POINT (137.3777 35.16275) # 2    20.92308 330.6375 177.22711 POINT (137.3774 35.16304) # 3    18.03867 223.0688 123.08946  POINT (137.381 35.16245) # 4    17.39841 172.4500  95.24402 POINT (137.3799 35.16216) # 5    20.43833 249.2562 138.22925 POINT (137.3806 35.16245) # 6    20.04576 235.3688 130.56611 POINT (137.3806 35.16363) # 7    20.01860 266.9125 143.88520  POINT (137.377 35.16275) # 8    21.07500 273.0625 151.47596 POINT (137.3803 35.16363) # 9    19.81884 270.2000 148.59707 POINT (137.3785 35.16363) # 10   22.15147 333.8500 182.89619 POINT (137.3788 35.16392) plots_sf$longitude <- sf::st_coordinates(sf::st_centroid(plots_sf))[, 1] plots_sf$latitude <- sf::st_coordinates(sf::st_centroid(plots_sf))[, 2]  shapefile_plots <- RawPlots(as.data.frame(plots_sf))  # Which column is your unique Plot ID?  #  # 1: Manual entry # 2: MEAN_Heigh # 3: V # 4: AGB # 5: geometry # 6: longitude # 7: latitude #  # Selection: 1 # Enter the numeric value for manual entry: 1 # Which column is your plot AGB?  #  # 1: Manual entry # 2: MEAN_Heigh # 3: V # 4: AGB # 5: geometry # 6: longitude # 7: latitude #  # Selection: 4 # Select longitude column  #  # 1: Manual entry # 2: MEAN_Heigh # 3: V # 4: AGB # 5: geometry # 6: longitude # 7: latitude #  # Selection: 6 # Which column is your latitude?  #  # 1: Manual entry # 2: MEAN_Heigh # 3: V # 4: AGB # 5: geometry # 6: longitude # 7: latitude #  # Selection: 7 # Select plot size column  #  # 1: Manual entry # 2: MEAN_Heigh # 3: V # 4: AGB # 5: geometry # 6: longitude # 7: latitude #  # Selection: 1 # Enter the numeric value for manual entry: 100 # Select year column  #  # 1: Manual entry # 2: MEAN_Heigh # 3: V # 4: AGB # 5: geometry # 6: longitude # 7: latitude #  # Selection: 1 # Enter the numeric value for manual entry: 2022  head(shapefile_plots) #   PLOT_ID  POINT_X  POINT_Y  AGB_T_HA SIZE_HA FEZ GEZ AVG_YEAR # 1       1 137.3777 35.16275 127.70163    0.01  NA  NA     2022 # 2       1 137.3774 35.16304 177.22711    0.01  NA  NA     2022 # 3       1 137.3810 35.16245 123.08946    0.01  NA  NA     2022 # 4       1 137.3799 35.16216  95.24402    0.01  NA  NA     2022 # 5       1 137.3806 35.16245 138.22925    0.01  NA  NA     2022 # 6       1 137.3806 35.16363 130.56611    0.01  NA  NA     2022"},{"path":"https://atnt.github.io/Plot2Map/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arnan Araza. Author. AndrÃ© Tavares. Author, maintainer.","code":""},{"path":"https://atnt.github.io/Plot2Map/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Araza , Tavares (2025). Plot2Map: Ground Biomass Plot Map Comparison. R package version 0.0.0.9000, https://aTnT.github.io/Plot2Map/.","code":"@Manual{,   title = {Plot2Map: Above Ground Biomass Plot to Map Comparison},   author = {Arnan Araza and AndrÃ© Tavares},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://aTnT.github.io/Plot2Map/}, }"},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"plot2map-","dir":"","previous_headings":"","what":"Above Ground Biomass Plot to Map Comparison","title":"Above Ground Biomass Plot to Map Comparison","text":"Plot2Map R package comparing forest plot data biomass maps, focus Ground Biomass (AGB) estimation validation.","code":""},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Above Ground Biomass Plot to Map Comparison","text":"can install Plot2Map GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"aTnT/Plot2Map\")"},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"what-plot2map-can-be-used-for","dir":"","previous_headings":"","what":"What Plot2Map can be used for","title":"Above Ground Biomass Plot to Map Comparison","text":"Pre-processing various types plot data (point data, polygons, tree-level measurements, lidar) Temporal adjustment plot data match map epoch Estimation measurement sampling errors Validation global AGB maps Support custom forest masks Aggregation results different spatial scales","code":""},{"path":[]},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"plot-data-pre-processing","dir":"","previous_headings":"Usage","what":"Plot data pre-processing","title":"Above Ground Biomass Plot to Map Comparison","text":"âs basic workflow using Plot2Map. âll using plots dataset provided package. now preprocess sampled plot data. first step remove plots deforested based Global Forest Change (GFC) dataset (Hansen et al., 2013). use Deforested() processes plot, downloads necessary GFC forest loss tiles, determines plot deforested beyond set deforestation threshold deforestation occurred specified map year. example use default 5% deforestation threshold, validate AGB map 2022: can see function returns list containing two elements: $non_deforested_plots: sf object non-deforested plots. $all_plots: original input sf object added deforestated proportion (0-1) w.r.t. plot area deforestation start year. next step assign ecological zones continents plot locations. use BiomePair() . function overlays plot locations pre-processed data assign corresponding FAO ecological zones (biomes), Global Ecological Zones (GEZ) continents (zones) plot: step use TempApplyVar() adjust plot biomass values align map year adding subtracting annual growth increment older newer plots. function uses growth data model-based estimate growth-age relationships. function also computes temporal variance (standard deviation) biomass changes based growth-rate standard deviations. example apply temporal adjustment calculate variance Global Ecological Zones (GEZ) within plot data: Note $AGB_T_HA, $AGB_T_HA_ORIG $sdGrowth columns added plot dataset. first corresponding adjusted biomass values specified map_year, second keeping original biomass values adjustment last adding temporal standard deviation biomass adjustment.","code":"library(Plot2Map)  # Load sample plot data. In a real application, this would be your own data data(plots)  head(plots) #   PLOT_ID   POINT_X     POINT_Y AGB_T_HA AVG_YEAR SIZE_HA # 1    AFR7  24.53906   0.9925556   407.60   2011.5       1 # 2    AFR7  24.52981   0.8063056   291.20   2011.5       1 # 3    AFR7  24.52256   0.8274167   366.00   2011.5       1 # 4   AFR10  12.74900   6.2112000    24.90   2007.0       1 # 5    AUS1 145.62743 -37.5924562   699.46   2014.0       1 # 6    AUS1 115.98288 -34.5775977   595.41   2012.0       1 # To reduce data download needs we will only use plots within the \"EU2\" plot id region # Keep in mind that this still requires a significant amount of data to be downloaded preprocessed_plots <- Deforested(plots[plots$PLOT_ID == \"EU2\", ] , map_year = 2022)  # (...) # Hansen_GFC-2023-v1.11_lossyear_40N_010W.tif already exists and verified - skipping # Processing row 5328 with PLOT_ID EU2 and buffered area 0.19 ha ...  #  # Hansen_GFC-2023-v1.11_lossyear_40N_010W.tif already exists and verified - skipping # Deforestation detected in 100% of the buffered area in plot row 5328 with PLOT_ID EU2.  # The earliest measured year of deforestation is 2016. #  # Removed 354 plot(s) that have > 5 % deforested area before/during the 2022 map year.  print(preprocessed_plots)  # $non_deforested_plots # Simple feature collection with 4974 features and 4 fields # Geometry type: POINT # Dimension:     XY # Bounding box:  xmin: -7.451944 ymin: 36.06354 xmax: 3.24262 ymax: 43.45025 # Geodetic CRS:  WGS 84 # First 10 features: #    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA                    geometry # 1      EU2  45.90801     2002   0.196  POINT (-6.740698 38.14153) # 2      EU2  51.24531     2006   0.196   POINT (-5.06974 37.89271) # 3      EU2  69.61214     2004   0.196   POINT (-2.326055 38.2154) # 4      EU2  58.50748     2002   0.196  POINT (-4.500239 40.56834) # 5      EU2 130.73962     2000   0.196  POINT (-4.524572 43.13481) # 6      EU2  16.50173     2005   0.196 POINT (-0.9116234 42.72071) # 7      EU2  25.77160     2006   0.196   POINT (-5.17236 38.28734) # 8      EU2  77.99414     2001   0.196   POINT (2.830552 42.15426) # 9      EU2  85.97881     2001   0.196  POINT (-4.866867 39.29276) # 10     EU2  41.99649     2005   0.196  POINT (-2.718447 42.86548) #  # $all_plots # Simple feature collection with 5328 features and 6 fields # Geometry type: POINT # Dimension:     XY # Bounding box:  xmin: -7.451944 ymin: 36.06354 xmax: 3.24262 ymax: 43.46688 # Geodetic CRS:  WGS 84 # First 10 features: #     PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA                    geometry defo defo_start_year # 299     EU2  45.90801     2002   0.196  POINT (-6.740698 38.14153)    0              NA # 300     EU2  51.24531     2006   0.196   POINT (-5.06974 37.89271)    0              NA # 301     EU2  69.61214     2004   0.196   POINT (-2.326055 38.2154)    0              NA # 302     EU2  58.50748     2002   0.196  POINT (-4.500239 40.56834)    0              NA # 303     EU2 130.73962     2000   0.196  POINT (-4.524572 43.13481)    0              NA # 304     EU2  16.50173     2005   0.196 POINT (-0.9116234 42.72071)    0              NA # 305     EU2  25.77160     2006   0.196   POINT (-5.17236 38.28734)    0              NA # 306     EU2  77.99414     2001   0.196   POINT (2.830552 42.15426)    0              NA # 307     EU2  85.97881     2001   0.196  POINT (-4.866867 39.29276)    0              NA # 308     EU2  41.99649     2005   0.196  POINT (-2.718447 42.86548)    0              NA preprocessed_plots_biome <- BiomePair(preprocessed_plots$non_deforested_plots) head(preprocessed_plots_biome)  #   PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA  POINT_X  POINT_Y   ZONE               FAO.ecozone         GEZ # 1     EU2  26.57895     2001   0.196 1.967619 42.37488 Europe Temperate mountain system   Temperate # 2     EU2 207.19827     2001   0.196 1.943181 42.38366 Europe Temperate mountain system   Temperate # 3     EU2 106.25631     2001   0.196 2.319521 42.40453 Europe Temperate mountain system   Temperate # 4     EU2  56.08846     2001   0.196 1.820888 42.42750 Europe Temperate mountain system   Temperate # 5     EU2 143.96612     2001   0.196 3.036482 42.45157 Europe    Subtropical dry forest Subtropical # 6     EU2 100.97905     2001   0.196 1.723664 42.42646 Europe Temperate mountain system   Temperate preprocessed_plots_biome_temp <- TempApplyVar(preprocessed_plots_biome, 2022) head(preprocessed_plots_biome_temp)  #   PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA  POINT_X  POINT_Y   ZONE               FAO.ecozone         GEZ AGB_T_HA_ORIG sdGrowth # 1     EU2  91.67895     2001   0.196 1.967619 42.37488 Europe Temperate mountain system   Temperate      26.57895     65.1 # 2     EU2 207.19827     2001   0.196 1.943181 42.38366 Europe Temperate mountain system   Temperate     207.19827      0.0 # 3     EU2 106.25631     2001   0.196 2.319521 42.40453 Europe Temperate mountain system   Temperate     106.25631      0.0 # 4     EU2 121.18846     2001   0.196 1.820888 42.42750 Europe Temperate mountain system   Temperate      56.08846     65.1 # 5     EU2 164.96612     2001   0.196 3.036482 42.45157 Europe    Subtropical dry forest Subtropical     143.96612     21.0 # 6     EU2 100.97905     2001   0.196 1.723664 42.42646 Europe Temperate mountain system   Temperate     100.97905      0.0"},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"agb-map-validation","dir":"","previous_headings":"Usage","what":"AGB map validation","title":"Above Ground Biomass Plot to Map Comparison","text":"Now letâs suppose want validate AGB map preprocessed_plots_biome_temp data . give example invDasymetry() function AGB map ESA-CCI AGB dataset. function performs inverse dasymetric mapping plot data. selects plots based given criteria, optionally aggregates , calculates tree cover fraction AGB plot cell. case use tree cover threshold 10% meaning areas tree cover percentage threshold contribute biomass estimates. Now validation data invDasymetry(), can analyze visualize results. function returns data frame several columns, including: plotAGB_[threshold]: AGB values adjusted forest cover threshold (e.g., plotAGB_10) tfPlotAGB: Tree-filtered plot AGB (aggregated) orgPlotAGB: Original plot AGB values mapAGB: AGB values extracted map SIZE_HA: Plot size hectares x y: Plot coordinates can now visualize relationship reference plot data map values using plotting functions: output Accuracy() function provides assessment map accuracy including binned statistics AGB ranges.","code":"# Validate AGB map AGBdata <- invDasymetry(plot_data = preprocessed_plots_biome_temp,                        dataset = \"esacci\",                        is_poly = FALSE,                        threshold = 10,                        map_year = 2022,                        parallel = TRUE)                         # memfrac   : 0.5 # tolerance : 0.1 # verbose   : FALSE # todisk    : FALSE # tempdir   : /tmp/RtmpjdE3bA # datatype  : FLT4S # memmin    : 1 # progress  : 3 # 4975 plots or cells being processed... # Processing 4975 plots in 100 batches of up to 50 plots each # Processing complete. Results:  #  #     plotAGB_10 tfPlotAGB orgPlotAGB mapAGB SIZE_HA          x        y # 1    91.678952  91.67895  26.578952     49   0.196  1.9676189 42.37488 # 2   207.198266 207.19827 207.198266     95   0.196  1.9431806 42.38366 # 3   106.256307 106.25631 106.256307    133   0.196  2.3195210 42.40453 # 4   121.188457 121.18846  56.088457      6   0.196  1.8208879 42.42750 # 5   164.966116 164.96612 143.966116    105   0.196  3.0364816 42.45157 # 6    88.356669 100.97905 100.979051    114   0.196  1.7236641 42.42646 # (...) # Visualize results with binned plot Binned(AGBdata$plotAGB_10, AGBdata$mapAGB,         \"EU2 Plots - Binned Comparison\") # Create a scatter plot Scatter(AGBdata$plotAGB_10, AGBdata$mapAGB,          \"EU2 Plots - Scatter Plot\") # Calculate accuracy metrics # Use fewer intervals since we have a small sample Accuracy(AGBdata, intervals = 6)  #   AGB bin (Mg/ha)    n AGBref (Mg/ha) AGBmap (Mg/ha) RMSD varPlot # 1           0-100 3104             40             40   40       1 # 2         100-150 1556            121             89   63       1 # 3         150-200  157            170            128   76       1 # 4         200-250   53            219            166   84       1 # 5         250-300   19            270            146  139       1 # 6            >300   20            371            159  227       1 # 7           total 4909             74             60   53       1"},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"handling-uncertainty","dir":"","previous_headings":"Usage","what":"Handling Uncertainty","title":"Above Ground Biomass Plot to Map Comparison","text":"Plot2Map also provides tool calculating incorporating plot uncertainty plot data. calculateTotalUncertainty() function combines measurement, sampling, growth uncertainties. uncertainty provided plot data form varPlot column inverse dasymetric mapping, invDasymetry() call calculateTotalUncertainty() calculate add plot uncertainty plot data automatically.","code":"# Calculate total plot uncertainty preprocessed_plots_biome_temp_uncertainty <- calculateTotalUncertainty(preprocessed_plots_biome_temp,                                                 map_year = 2022,                                                map_resolution = 100)                                                 # Calculating tree measurement uncertainty using RF model # Calculating sampling uncertainty using Rejou-Mechain approach # Loading sampling error data from package file # Using existing growth uncertainty (sdGrowth) values # Total uncertainty calculated for plot data of type: point  # Print the uncertainty components print(preprocessed_plots_biome_temp_uncertainty$uncertainty_components)  # measurement    sampling      growth  #   0.2337400   0.1331422   0.6331177   # Inspect plot data with uncertainty head(preprocessed_plots_biome_temp_uncertainty$data) #   PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA  POINT_X  POINT_Y   ZONE               FAO.ecozone         GEZ AGB_T_HA_ORIG sdGrowth   sdTree RS_HA ratio     sdSE   varPlot  sdTotal # 1     EU2  91.67895     2001   0.196 1.967619 42.37488 Europe Temperate mountain system   Temperate      26.57895     65.1 21.28590     1 0.196 22.01657 5175.8289 71.94323 # 2     EU2 207.19827     2001   0.196 1.943181 42.38366 Europe Temperate mountain system   Temperate     207.19827      0.0 29.50758     1 0.196 22.01657 1355.4264 36.81612 # 3     EU2 106.25631     2001   0.196 2.319521 42.40453 Europe Temperate mountain system   Temperate     106.25631      0.0 21.56276     1 0.196 22.01657  949.6819 30.81691 # 4     EU2 121.18846     2001   0.196 1.820888 42.42750 Europe Temperate mountain system   Temperate      56.08846     65.1 24.19848     1 0.196 22.01657 5308.3057 72.85812 # 5     EU2 164.96612     2001   0.196 3.036482 42.45157 Europe    Subtropical dry forest Subtropical     143.96612     21.0 35.91662     1 0.196 22.01657 2215.7332 47.07157 # 6     EU2 100.97905     2001   0.196 1.723664 42.42646 Europe Temperate mountain system   Temperate     100.97905      0.0 21.25330     1 0.196 22.01657  936.4321 30.60118"},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"aggregated-analysis","dir":"","previous_headings":"Usage","what":"Aggregated Analysis","title":"Above Ground Biomass Plot to Map Comparison","text":"Plot2Map allows spatial aggregation plots larger cells analysis different scales:","code":"# Aggregated analysis at 0.1 degree resolution with minimum 3 plots per cell AGBdata_agg <- invDasymetry(plot_data = preprocessed_plots_biome_temp_uncertainty$data,                            clmn = \"ZONE\",                             value = \"Europe\",                            aggr = 0.1,         # 0.1 degree aggregation                            minPlots = 3,       # Minimum 3 plots per cell                            dataset = \"esacci\",                            is_poly = FALSE)  # Visualize aggregated results Binned(AGBdata_agg$plotAGB_10, AGBdata_agg$mapAGB,        \"Europe - Aggregated 0.1 arc-deg\")"},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"working-with-different-plot-types","dir":"","previous_headings":"Usage","what":"Working with Different Plot Types","title":"Above Ground Biomass Plot to Map Comparison","text":"Plot2Map can handle various types plot data: Pre-formatted (see documentation) Unformatted (can processed RawPlots()) Can processed Polygonize() Processed MeasurementErr() estimates AGB uncertainty Processed Nested() followed MeasurementErr() Processed RefLidar() See âPlot data preparationâ vignette information.","code":""},{"path":"https://atnt.github.io/Plot2Map/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Above Ground Biomass Plot to Map Comparison","text":"Araza et al., comprehensive framework assessing accuracy uncertainty global -ground biomass maps, Remote Sensing Environment, Volume 272, 2022, 112917, ISSN 0034-4257, https://doi.org/10.1016/j.rse.2022.112917.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/AGBtileNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate AGB tile names â AGBtileNames","title":"Generate AGB tile names â AGBtileNames","text":"function generates file names AGB tiles based given polygon.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/AGBtileNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate AGB tile names â AGBtileNames","text":"","code":"AGBtileNames(   pol,   agbTilesDir = \"data/ESACCI-BIOMASS-L4-AGB-MERGED-100m-2020-fv5.0\" )"},{"path":"https://atnt.github.io/Plot2Map/reference/AGBtileNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate AGB tile names â AGBtileNames","text":"pol sf SpatVector object representing polygon interest.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/AGBtileNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate AGB tile names â AGBtileNames","text":"character vector unique file names AGB tiles.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate accuracy metrics for AGB estimates â Accuracy","title":"Calculate accuracy metrics for AGB estimates â Accuracy","text":"function calculates accuracy metrics Ground Biomass (AGB) estimates plot data map data, grouped specified intervals. computes means, root mean squared differences (RMSD), variances, statistics per AGB bin overall, saving results CSV file.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate accuracy metrics for AGB estimates â Accuracy","text":"","code":"Accuracy(df, intervals = 8, dir = \"results\", str = \"\")"},{"path":"https://atnt.github.io/Plot2Map/reference/Accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate accuracy metrics for AGB estimates â Accuracy","text":"df Dataframe containing plot map AGB data. Defaults plotsBACC. intervals Number intervals binning AGB values. Must 6, 7, 8. Defaults 8. dir Directory results saved. Defaults resultsFolder. str String append output CSV file name. Defaults empty string.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate accuracy metrics for AGB estimates â Accuracy","text":"dataframe accuracy metrics AGB bin total row.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Accuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate accuracy metrics for AGB estimates â Accuracy","text":"","code":"# \\donttest{ # Example with the right column structure # (Output of invDasymetry would include plotAGB_10 column) example_agb_data <- data.frame(   plotAGB_10 = c(120, 150, 180, 200, 220),   mapAGB = c(110, 140, 190, 180, 240),   SIZE_HA = c(0.5, 0.75, 1.0, 1.2, 0.9),   x = c(1, 2, 3, 4, 5),   y = c(10, 20, 30, 40, 50) )  # Run accuracy assessment results <- Accuracy(df = example_agb_data, intervals = 6) print(results) #>    AGB bin (Mg/ha)  n AGBref (Mg/ha) AGBmap (Mg/ha) RMSD varPlot #> 1            0-100  0            135            125   10       1 #> 2          100-150  2            190            185   16       1 #> 3          150-200  2            220            240   20       1 #> 13           total 10            174            172   15       1 # }"},{"path":"https://atnt.github.io/Plot2Map/reference/BBvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate block-to-block semivariogram â BBvar","title":"Calculate block-to-block semivariogram â BBvar","text":"Computes block--block semivariogram based variogram model, discretising block pixels calculating semivariances within blocks specified distances.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/BBvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate block-to-block semivariogram â BBvar","text":"","code":"BBvar(model, lat = 0, rsl, dists = c(0, 1:7 * 10 + 2))"},{"path":"https://atnt.github.io/Plot2Map/reference/BBvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate block-to-block semivariogram â BBvar","text":"model variogram model object gstat package. lat Latitude degrees, defaults 0. rsl Resolution vector x y resolution degrees (e.g., c(xres, yres)). dists Vector distances (km) calculate semivariogram, defaults c(0, 12, 22, 32, 42, 52, 62, 72).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/BBvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate block-to-block semivariogram â BBvar","text":"object class gstatVariogram containing block--block semivariogram.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/BBvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate block-to-block semivariogram â BBvar","text":"","code":"# Create a simple spherical variogram model and compute block semivariogram:   library(gstat)   vgm_model <- vgm(psill = 1, model = \"Sph\", range = 100, nugget = 0.1)   res <- c(0.01, 0.01)  # 0.01-degree resolution   result <- BBvar(model = vgm_model, lat = 40, rsl = res)   print(result) #>     np dist     gamma dir.hor dir.ver   id #> 1 4950    0 0.0000000       0       0 var1 #> 2 4950   12 0.1112126       0       0 var1 #> 3 4950   22 0.2522978       0       0 var1 #> 4 4950   32 0.3894844       0       0 var1 #> 5 4950   42 0.5177378       0       0 var1 #> 6 4950   52 0.6336616       0       0 var1 #> 7 4950   62 0.7341225       0       0 var1 #> 8 4950   72 0.8160625       0       0 var1"},{"path":"https://atnt.github.io/Plot2Map/reference/Binned.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a binned plot of AGB data â Binned","title":"Create a binned plot of AGB data â Binned","text":"function creates binned plot Ground Biomass (AGB) data, points sized according number observations error bars showing interquartile range.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Binned.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a binned plot of AGB data â Binned","text":"","code":"Binned(x, y, caption = \"\", fname = \"\", outDir = \"results\")"},{"path":"https://atnt.github.io/Plot2Map/reference/Binned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a binned plot of AGB data â Binned","text":"x Numeric vector reference AGB values. y Numeric vector mapped AGB values (length x). caption Character string plot title/caption. fname Character string specifying output file name saving plot. empty, plot displayed saved. outDir Character string specifying output directory saving plot (default: \"results\").","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Binned.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a binned plot of AGB data â Binned","text":"Invisibly returns NULL. function creates plot side effect.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Binned.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a binned plot of AGB data â Binned","text":"","code":"if (FALSE) { # \\dontrun{ data(\"plots\") set.seed(42) ref_data <- plots$AGB_T_HA[1:100] map_data <- ref_data + rnorm(100, 0, 20) Binned(ref_data, map_data, \"Example Plot\", \"binned_plot.png\") } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/BiomePair.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign ecological zones and continents to plot locations â BiomePair","title":"Assign ecological zones and continents to plot locations â BiomePair","text":"function overlays plot locations pre-processed data assign corresponding FAO ecological zones (biomes), Global Ecological Zones (GEZ) continents (zones) plot.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/BiomePair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign ecological zones and continents to plot locations â BiomePair","text":"","code":"BiomePair(plt)"},{"path":"https://atnt.github.io/Plot2Map/reference/BiomePair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign ecological zones and continents to plot locations â BiomePair","text":"plt data frame sf object containing plot data. data frame input format, longitude latitude coordinates placed \"POINT_X\" \"POINT_Y\" columns respectively WGS 84 CRS.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/BiomePair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign ecological zones and continents to plot locations â BiomePair","text":"data frame added columns ZONE (continent), FAO.ecozone, GEZ (Global Ecological Zones).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/BiomePair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign ecological zones and continents to plot locations â BiomePair","text":"","code":"if (FALSE) { # \\dontrun{   plot_data <- data.frame(POINT_X = c(-1.007, -1.208), POINT_Y = c(12.010, 13.611))   result <- BiomePair(plot_data) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/Deforested.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","title":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","text":"function identifies removes plots deforested based Global Forest Change (GFC) dataset (Hansen et al., 2013). processes plot, downloads necessary forest loss tiles, determines plot deforested beyond set deforestation threshold deforestation occurred specified map year.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Deforested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","text":"","code":"Deforested(   plt,   map_year,   gfc_folder = \"data/GFC\",   gfc_dataset_year = \"latest\",   defo_threshold = 0.05 )"},{"path":"https://atnt.github.io/Plot2Map/reference/Deforested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","text":"plt data frame sf object containing plot data. data frame input format, longitude latitude coordinates placed \"POINT_X\" \"POINT_Y\" columns respectively WGS 84 CRS. map_year Numeric value indicating threshold year deforestation. Plots deforestation started map_year removed $non_deforested_plots list element output. year 2001-2023 range. gfc_folder Character string specifying directory download GFC data. gfc_dataset_year Numeric value describing version Hansen data use: year 2018-2023 range \"latest\" (default). defo_threshold Numeric value indicating deforestation threshold. Plots deforestation area proportion larger set defo_threshold removed $non_deforested_plots list element output. Default 5%.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Deforested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","text":"list containing two elements: non_deforested_plots sf object non-deforested plots all_plots original input sf object added deforestated proportion (0-1) w.r.t. plot area deforestation start year","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Deforested.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","text":"M. C. Hansen et al., High-Resolution Global Maps 21st-Century Forest Cover Change. Science342,850-853(2013). DOI:10.1126/science.1244693","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Deforested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove deforested plots by overlaying plots with Global Forest Change data â Deforested","text":"","code":"if (FALSE) { # \\dontrun{ # 4 plots without and 4 plots with deforestation: plots_sample <- c(1, 2, 3, 4, 182, 200, 323, 6765) sampled_plots <- plots[plots_sample,] Deforested(sampled_plots, 2010) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/ESACCIAGBtileNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate ESA-CCI AGB tile names â ESACCIAGBtileNames","title":"Generate ESA-CCI AGB tile names â ESACCIAGBtileNames","text":"function generates file names ESA-CCI AGB tiles based given polygon.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/ESACCIAGBtileNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate ESA-CCI AGB tile names â ESACCIAGBtileNames","text":"","code":"ESACCIAGBtileNames(   pol,   esacci_biomass_year = \"latest\",   esacci_biomass_version = \"latest\" )"},{"path":"https://atnt.github.io/Plot2Map/reference/ESACCIAGBtileNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate ESA-CCI AGB tile names â ESACCIAGBtileNames","text":"pol sf SpatVector object representing polygon interest. esacci_biomass_year ESA CCI BIOMASS AGB tiles year use. Use either 2010, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 \"latest\" (default). esacci_biomass_version ESA CCI BIOMASS AGB tiles version use. Use either \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\", \"v5.01\", \"v6.0\" \"latest\" (default).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/ESACCIAGBtileNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate ESA-CCI AGB tile names â ESACCIAGBtileNames","text":"character vector unique file names ESA-CCI AGB tiles.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoShift.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze AGB shift in bins â HistoShift","title":"Analyze AGB shift in bins â HistoShift","text":"function analyzes shift AGB values across different bins temporal adjustment forest fraction correction. generates summary table changes AGB distribution.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoShift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze AGB shift in bins â HistoShift","text":"","code":"HistoShift(df, year, outDir = \"results\")"},{"path":"https://atnt.github.io/Plot2Map/reference/HistoShift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze AGB shift in bins â HistoShift","text":"df data frame containing AGB data. year Numeric value indicating year analysis. outDir Character string specifying output directory saving CSV file (default: \"results\").","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoShift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze AGB shift in bins â HistoShift","text":"data frame summarizing changes AGB distribution across bins.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoShift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze AGB shift in bins â HistoShift","text":"","code":"set.seed(42) sample_plots <- plots[sample(nrow(plots), 10), ] sample_plots <- BiomePair(sample_plots) sample_plots <- TempApply(sample_plots, 2004) head(sample_plots) #>   PLOT_ID AGB_T_HA AVG_YEAR SIZE_HA   POINT_X  POINT_Y   ZONE #> 1     EU2 97.17177     2001   0.196  1.305915 42.59214 Europe #> 2     EU2 62.49786     2000   0.196 -3.988935 40.33963 Europe #> 3     EU2 57.64102     2003   0.196 -2.707056 42.68534 Europe #> 4     EU1 63.39700     2008   0.015 15.218726 59.81792 Europe #> 5     EU2 82.59592     2007   0.196 -7.182390 37.34714 Europe #> 6     EU2 33.56841     2007   0.196 -7.216243 37.34765 Europe #>                   FAO.ecozone         GEZ AGB_T_HA_ORIG #> 1   Temperate mountain system   Temperate      87.87177 #> 2      Subtropical dry forest Subtropical      46.49786 #> 3 Subtropical mountain system Subtropical      55.14102 #> 4    Boreal coniferous forest      Boreal      67.79700 #> 5      Subtropical dry forest Subtropical      94.59592 #> 6      Subtropical dry forest Subtropical      45.56841 HistoShift(sample_plots, 2004) #>   agb_Mgha_bins n_pre n_post agb_Mgha_pre agb_Mgha_post #> 1       (20,40]     1      2     37.31206      35.44024 #> 2       (40,60]     5      3     51.90657      53.98887 #> 3       (60,80]     1      2     67.79700      62.94743 #> 4      (80,100]     2      2     91.23385      89.88385 #> 5     (140,160]     1      1    150.97321     150.97321"},{"path":"https://atnt.github.io/Plot2Map/reference/HistoTemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize histogram of temporal fix effect â HistoTemp","title":"Visualize histogram of temporal fix effect â HistoTemp","text":"function creates histogram visualize effect temporal adjustment forest fraction correction AGB values. generates plot comparing distribution AGB values adjustment.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoTemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize histogram of temporal fix effect â HistoTemp","text":"","code":"HistoTemp(df, year, outDir = \"results\")"},{"path":"https://atnt.github.io/Plot2Map/reference/HistoTemp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize histogram of temporal fix effect â HistoTemp","text":"df data frame containing AGB data. year Numeric value indicating year analysis. outDir Character string specifying output directory saving histogram (default: \"results\").","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoTemp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize histogram of temporal fix effect â HistoTemp","text":"Invisibly returns NULL. function creates plot side effect.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/HistoTemp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize histogram of temporal fix effect â HistoTemp","text":"","code":"set.seed(42) sample_plots <- plots[sample(nrow(plots), 10), ] sample_plots <- BiomePair(sample_plots) sample_plots <- TempApply(sample_plots, 2004) head(sample_plots) #>   PLOT_ID AGB_T_HA AVG_YEAR SIZE_HA   POINT_X  POINT_Y   ZONE #> 1     EU2 97.17177     2001   0.196  1.305915 42.59214 Europe #> 2     EU2 62.49786     2000   0.196 -3.988935 40.33963 Europe #> 3     EU2 57.64102     2003   0.196 -2.707056 42.68534 Europe #> 4     EU1 63.39700     2008   0.015 15.218726 59.81792 Europe #> 5     EU2 82.59592     2007   0.196 -7.182390 37.34714 Europe #> 6     EU2 33.56841     2007   0.196 -7.216243 37.34765 Europe #>                   FAO.ecozone         GEZ AGB_T_HA_ORIG #> 1   Temperate mountain system   Temperate      87.87177 #> 2      Subtropical dry forest Subtropical      46.49786 #> 3 Subtropical mountain system Subtropical      55.14102 #> 4    Boreal coniferous forest      Boreal      67.79700 #> 5      Subtropical dry forest Subtropical      94.59592 #> 6      Subtropical dry forest Subtropical      45.56841 HistoTemp(sample_plots, 2004)"},{"path":"https://atnt.github.io/Plot2Map/reference/MakeBlockPolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","title":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","text":"function creates square polygon (block) contains input coordinates. block aligned grid defined size parameter, coordinates rounded nearest multiple size. resulting polygon returned sf object.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/MakeBlockPolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","text":"","code":"MakeBlockPolygon(x, y, size)"},{"path":"https://atnt.github.io/Plot2Map/reference/MakeBlockPolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","text":"x Numeric. x-coordinate (e.g., longitude) point within desired block. y Numeric. y-coordinate (e.g., latitude) point within desired block. size Numeric. size (side length) square block units input coordinates (e.g., degrees).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/MakeBlockPolygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","text":"sf object representing square polygon. polygon created WGS 84 coordinate reference system (EPSG:4326).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/MakeBlockPolygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","text":"function calculates lower-left corner block aligning input coordinates grid defined size parameter. example: x = 5.2, y = 10.7, size = 1, lower-left corner (5, 10). block extend (5, 10) (6, 11). x = 5.2, y = 10.7, size = 0.1, lower-left corner (5.1, 10.6). block extend (5.1, 10.6) (5.2, 10.7). polygon created vertices following order: Lower-left corner (xll, yll) Lower-right corner (xll + size, yll) Upper-right corner (xll + size, yll + size) Upper-left corner (xll, yll + size) Lower-left corner (xll, yll) (close polygon) resulting polygon returned sf object WGS 84 (EPSG:4326) coordinate reference system.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/MakeBlockPolygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a square polygon (block) based on input coordinates and size â MakeBlockPolygon","text":"","code":"# Create a 1x1 degree block including the point (5.2, 10.7) aligned to a 1x1 degree grid: block <- MakeBlockPolygon(5.2, 10.7, 1) print(block) #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 5 ymin: 10 xmax: 6 ymax: 11 #> Geodetic CRS:  WGS 84 #>                         geometry #> 1 POLYGON ((5 10, 6 10, 6 11,... plot(block)  # Create a 0.25x0.25 degree block including the point (5.2, 10.7) aligned to a 0.25x0.25 degree grid: block2 <- MakeBlockPolygon(5.2, 10.7, 0.25) print(block2) #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 5 ymin: 10.5 xmax: 5.25 ymax: 10.75 #> Geodetic CRS:  WGS 84 #>                         geometry #> 1 POLYGON ((5 10.5, 5.25 10.5... sf::st_centroid(block2) #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 5.125 ymin: 10.62501 xmax: 5.125 ymax: 10.62501 #> Geodetic CRS:  WGS 84 #>                 geometry #> 1 POINT (5.125 10.62501)"},{"path":"https://atnt.github.io/Plot2Map/reference/Nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Format tree-level data from nested plots â Nested","title":"Format tree-level data from nested plots â Nested","text":"function processes tree-level data nested plots, combining centroid information tree measurements using unique ID datasets.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format tree-level data from nested plots â Nested","text":"","code":"Nested(centroids_sf, tree_table)"},{"path":"https://atnt.github.io/Plot2Map/reference/Nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format tree-level data from nested plots â Nested","text":"centroids_sf sf object containing centroids information sub-plots. tree_table data frame containing tree-level measurements.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format tree-level data from nested plots â Nested","text":"list containing two elements: plotTree data frame formatted tree-level data xyTree data frame plot ID coordinates","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Nested.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format tree-level data from nested plots â Nested","text":"function performs following steps: Converts centroid data WGS84 projection Creates buffer around centroids Filters tree data alive trees Prompts user column selections additional information Processes tree height data Combines tree data centroid coordinates","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format tree-level data from nested plots â Nested","text":"","code":"if (FALSE) { # \\dontrun{ # This example requires interactive input and spatial data files # Load centroid data (sf object) centroid_data <- sf::st_read(system.file(\"extdata\", \"SampleCentroid.shp\", package = \"Plot2Map\")) # Load tree data tree_data <- read.csv(system.file(\"extdata\", \"SampleTreeNested.csv\", package = \"Plot2Map\")) # Process the nested plot data nested_data <- Nested(centroid_data, tree_data) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/Polygonize.html","id":null,"dir":"Reference","previous_headings":"","what":"Create polygons from plot coordinates â Polygonize","title":"Create polygons from plot coordinates â Polygonize","text":"function creates polygons subplot corner coordinates irregular plot shapes, converting source SRS EPSG:4326 / WSG84. can handle rectangular non-rectangular plots, well circular plots.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Polygonize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create polygons from plot coordinates â Polygonize","text":"","code":"Polygonize(df, SRS)"},{"path":"https://atnt.github.io/Plot2Map/reference/Polygonize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create polygons from plot coordinates â Polygonize","text":"df data frame containing plot coordinates identification labels. SRS Spatial Reference System assign resulting polygons.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Polygonize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create polygons from plot coordinates â Polygonize","text":"data frame polygon information, including PLOT_ID, SIZE_HA, POINT_X, POINT_Y.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Polygonize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create polygons from plot coordinates â Polygonize","text":"","code":"if (FALSE) { # \\dontrun{   plot_data <- data.frame(     id = c(rep(\"plot1\", 4), rep(\"plot2\", 4)),     POINT_X = c(0, 1, 1, 0, 2, 3, 3, 2),     POINT_Y = c(0, 0, 1, 1, 2, 2, 3, 3)   )   polygons <- Polygonize(plot_data, 4326) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Plot Data â RawPlots","title":"Format Plot Data â RawPlots","text":"function formats raw plot data standardized structure processing.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Plot Data â RawPlots","text":"","code":"RawPlots(plots, mapYear = NULL)"},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Plot Data â RawPlots","text":"plots data frame containing plot data Latitude, Longitude coordinates. mapYear Optional. year map used comparison (used current implementation).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Plot Data â RawPlots","text":"data frame formatted plot data, including columns PLOT_ID, POINT_X, POINT_Y, AGB_T_HA, SIZE_HA, FEZ, GEZ, AVG_YEAR.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Plot Data â RawPlots","text":"function prompts user select manually enter column indices key plot attributes. formats data, converting plot sizes m^2 hectares necessary.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Plot Data â RawPlots","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'raw_plots' is your input data frame formatted_plots <- RawPlots(raw_plots) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlotsTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Tree-Level Plot Data â RawPlotsTree","title":"Format Tree-Level Plot Data â RawPlotsTree","text":"function formats raw tree-level plot data standardized structure processing.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlotsTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Tree-Level Plot Data â RawPlotsTree","text":"","code":"RawPlotsTree(plots)"},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlotsTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Tree-Level Plot Data â RawPlotsTree","text":"plots data frame containing tree-level plot data Latitude, Longitude coordinates.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlotsTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Tree-Level Plot Data â RawPlotsTree","text":"list containing two data frames: Tree-level data columns id, genus, species, diameter, (height), size, fez, gez, year Plot-level data columns id, x, y","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlotsTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Tree-Level Plot Data â RawPlotsTree","text":"function prompts user select column indices key tree plot attributes. handles cases without tree height data.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RawPlotsTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Tree-Level Plot Data â RawPlotsTree","text":"","code":"if (FALSE) { # \\dontrun{ # This function requires interactive input # Sample code to format tree-level data: tree_data <- read.csv(sample_file(\"SampleTreeNested.csv\")) formatted_tree_plots <- RawPlotsTree(tree_data) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/RefLidar.html","id":null,"dir":"Reference","previous_headings":"","what":"Process LiDAR-based Reference Data â RefLidar","title":"Process LiDAR-based Reference Data â RefLidar","text":"function processes LiDAR-based reference data raster files, converting standardized point data format.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RefLidar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process LiDAR-based Reference Data â RefLidar","text":"","code":"RefLidar(lidar.dir)"},{"path":"https://atnt.github.io/Plot2Map/reference/RefLidar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process LiDAR-based Reference Data â RefLidar","text":"lidar.dir Character string specifying directory containing LiDAR raster files.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RefLidar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process LiDAR-based Reference Data â RefLidar","text":"data frame containing processed point data columns varying based raster type: PLOT_ID Unique identifier plot POINT_X Longitude coordinate POINT_Y Latitude coordinate AGB/CV/SD Ground Biomass, Coefficient Variation, Standard Deviation (depending raster type) AVG_YEAR Year data collection","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RefLidar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process LiDAR-based Reference Data â RefLidar","text":"function performs following steps: Loads raster files specified directory Reprojects rasters WGS84 necessary Converts raster data points Prompts user information extract PLOT_ID AVG_YEAR file names Formats output based specified raster type (AGB, CV, SD)","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/RefLidar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process LiDAR-based Reference Data â RefLidar","text":"","code":"if (FALSE) { # \\dontrun{ lidar_data <- RefLidar(lidar.dir = \"data/SustainableLandscapeBrazil_v04/SLB_AGBmaps\") } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/SDtileNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate AGB SD tile names â SDtileNames","title":"Generate AGB SD tile names â SDtileNames","text":"function generates file names AGB SD tiles based given polygon.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/SDtileNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate AGB SD tile names â SDtileNames","text":"","code":"SDtileNames(   pol,   agbTilesDir = \"data/ESACCI-BIOMASS-L4-AGB-MERGED-100m-2020-fv5.0\" )"},{"path":"https://atnt.github.io/Plot2Map/reference/SDtileNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate AGB SD tile names â SDtileNames","text":"pol sf SpatVector object representing polygon interest.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/SDtileNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate AGB SD tile names â SDtileNames","text":"character vector unique file names AGB SD tiles.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a scatter plot of AGB data â Scatter","title":"Create a scatter plot of AGB data â Scatter","text":"function creates simple scatter plot Ground Biomass (AGB) data 1:1 line.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a scatter plot of AGB data â Scatter","text":"","code":"Scatter(x, y, caption = \"\", fname = \"\", outDir = \"results\")"},{"path":"https://atnt.github.io/Plot2Map/reference/Scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a scatter plot of AGB data â Scatter","text":"x Numeric vector reference AGB values. y Numeric vector mapped AGB values (length x). caption Character string plot title/caption. fname Character string specifying output file name saving plot. empty, plot displayed saved. outDir Character string specifying output directory saving plot (default: \"results\").","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a scatter plot of AGB data â Scatter","text":"Invisibly returns NULL. function creates plot side effect.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/Scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a scatter plot of AGB data â Scatter","text":"","code":"if (FALSE) { # \\dontrun{ data(\"plots\") set.seed(42) ref_data <- plots$AGB_T_HA[1:100] map_data <- ref_data + rnorm(100, 0, 20) Scatter(ref_data, map_data, \"Example Scatter Plot\", \"scatter_plot.png\") } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/SpatCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate spatial standard deviation at 0.1 degrees resolution â SpatCor","title":"Calculate spatial standard deviation at 0.1 degrees resolution â SpatCor","text":"Aggregates fine-resolution raster coarser resolution (0.1 degrees), computing standard deviation block based variogram model, accounting spatial correlation.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/SpatCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate spatial standard deviation at 0.1 degrees resolution â SpatCor","text":"","code":"SpatCor(vgm, r)"},{"path":"https://atnt.github.io/Plot2Map/reference/SpatCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate spatial standard deviation at 0.1 degrees resolution â SpatCor","text":"vgm variogram model object gstat package. r SpatRaster object terra package containing input data (e.g., standard deviations).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/SpatCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate spatial standard deviation at 0.1 degrees resolution â SpatCor","text":"SpatRaster object 0.1-degree resolution values representing standard deviation input data aggregated blocks, adjusted spatial correlation.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/SpatCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate spatial standard deviation at 0.1 degrees resolution â SpatCor","text":"","code":"# Aggregate a synthetic raster to 0.1-degree resolution:   library(terra) #> terra 1.8.54   library(gstat)   set.seed(42)   r <- rast(ncol = 20, nrow = 20, xmin = 0, xmax = 1, ymin = 0, ymax = 1, vals = runif(400))   plot(r)    vgm_model <- gstat::vgm(psill = 1, model = \"Sph\", range = 100, nugget = 0.1)   result <- SpatCor(vgm_model, r)   plot(result)"},{"path":"https://atnt.github.io/Plot2Map/reference/StrataAGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute weighted AGB by strata â StrataAGB","title":"Compute weighted AGB by strata â StrataAGB","text":"Assigns strata weights circular plots computes weighted mean standard deviation -ground biomass (AGB) tree standard deviation based strata sizes.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/StrataAGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute weighted AGB by strata â StrataAGB","text":"","code":"StrataAGB(   plots,   strata_weights = c(A = 0.22, B = 0.22, C = 0.68),   verbose = TRUE )"},{"path":"https://atnt.github.io/Plot2Map/reference/StrataAGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute weighted AGB by strata â StrataAGB","text":"plots data frame containing plot data columns AGB_T_HA (numeric, AGB tons per hectare), sdTree (numeric, standard deviation tree measurements), optionally stratum (character factor, strata classification). stratum missing, assigned based default weights. strata_weights named numeric vector specifying weights stratum. Defaults c(\"\" = 0.22, \"B\" = 0.22, \"C\" = 0.68), representing proportional areas. verbose Logical; TRUE, prints weighted mean AGB standard deviation. Defaults TRUE.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/StrataAGB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute weighted AGB by strata â StrataAGB","text":"list containing: wm Weighted mean AGB (tons per hectare). wsd Weighted mean tree standard deviation. weighted_plots input data frame weights assigned wt column.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/StrataAGB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute weighted AGB by strata â StrataAGB","text":"","code":"# Example 1: Basic usage with synthetic data   strata_plots <- data.frame(     AGB_T_HA = c(100, 150, 200),     sdTree = c(10, 15, 20),     stratum = c(\"A\", \"B\", \"C\")   )   result <- StrataAGB(strata_plots) #> Plot AGB is 170.54 with SD 17.05    print(result$wm)  # Weighted mean AGB #> [1] 170.5357   print(result$wsd) # Weighted standard deviation #> [1] 17.05357    # Example 2: Custom weights and no printing   custom_weights <- c(\"Low\" = 0.3, \"High\" = 0.7)   plots <- data.frame(     AGB_T_HA = c(120, 180),     sdTree = c(12, 18),     stratum = c(\"Low\", \"High\")   )   result <- StrataAGB(plots, strata_weights = custom_weights, verbose = FALSE)   print(result$weighted_plots) #>   AGB_T_HA sdTree stratum  wt #> 1      120     12     Low 0.3 #> 2      180     18    High 0.7"},{"path":"https://atnt.github.io/Plot2Map/reference/TCtileNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate tree cover tile names â TCtileNames","title":"Generate tree cover tile names â TCtileNames","text":"function generates file names tree cover tiles based given polygon year.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TCtileNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate tree cover tile names â TCtileNames","text":"","code":"TCtileNames(pol, year = 2010, treeCoverDir = \"data/treecover2010_v3_100m\")"},{"path":"https://atnt.github.io/Plot2Map/reference/TCtileNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate tree cover tile names â TCtileNames","text":"pol sf SpatVector object representing polygon interest. year Numeric, year generate tile names (2010, 2015, 2020).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TCtileNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate tree cover tile names â TCtileNames","text":"character vector unique file names tree cover tiles.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply temporal adjustment to plot biomass â TempApply","title":"Apply temporal adjustment to plot biomass â TempApply","text":"function adjusts plot biomass values align map year adding subtracting annual growth increment older newer plots. uses growth data model-based estimate growth-age relationships.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply temporal adjustment to plot biomass â TempApply","text":"","code":"TempApply(plt, map_year, gez = \"all\")"},{"path":"https://atnt.github.io/Plot2Map/reference/TempApply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply temporal adjustment to plot biomass â TempApply","text":"plt data frame sf object containing plot data. data frame input format, longitude latitude coordinates placed \"POINT_X\" \"POINT_Y\" columns respectively WGS 84 CRS. map_year Numeric value indicating AGB map year. gez Character string specifying Global Ecological Zones (GEZ) interest apply. \"\" (default), GEZ plt calculated.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply temporal adjustment to plot biomass â TempApply","text":"data frame adjusted AGB values.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply temporal adjustment to plot biomass â TempApply","text":"","code":"set.seed(42) sample_plots <- plots[sample(nrow(plots), 10), ] sample_plots #>      PLOT_ID     POINT_X   POINT_Y  AGB_T_HA AVG_YEAR SIZE_HA #> 2369     EU2   1.3059145  42.59214  87.87177     2001   0.196 #> 5273     EU2  -0.1585048  42.63245 150.97321     2004   0.196 #> 1252     EU2  -1.0662342  39.61600  58.63558     2006   0.196 #> 356      EU2  -5.1210978  40.02713  37.31206     2004   0.196 #> 7700     EU1  15.2187262  59.81792  67.79700     2008   0.015 #> 3954     EU2  -7.1823899  37.34714  94.59592     2007   0.196 #> 5403     EU2  -7.2162433  37.34765  45.56841     2007   0.196 #> 932      EU2  -2.7070556  42.68534  55.14102     2003   0.196 #> 5637    AUS1 145.8683679 -20.69546  53.69000     2004   0.160 #> 4002     EU2  -3.9889352  40.33963  46.49786     2000   0.196  sample_plots_gez <- BiomePair(sample_plots) sample_plots_gez #>    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA     POINT_X   POINT_Y      ZONE #> 1     AUS1  53.69000     2004   0.160 145.8683679 -20.69546 Australia #> 2      EU1  67.79700     2008   0.015  15.2187262  59.81792    Europe #> 3      EU2  87.87177     2001   0.196   1.3059145  42.59214    Europe #> 4      EU2  94.59592     2007   0.196  -7.1823899  37.34714    Europe #> 5      EU2  45.56841     2007   0.196  -7.2162433  37.34765    Europe #> 6      EU2  58.63558     2006   0.196  -1.0662342  39.61600    Europe #> 7      EU2  37.31206     2004   0.196  -5.1210978  40.02713    Europe #> 8      EU2  46.49786     2000   0.196  -3.9889352  40.33963    Europe #> 9      EU2 150.97321     2004   0.196  -0.1585048  42.63245    Europe #> 10     EU2  55.14102     2003   0.196  -2.7070556  42.68534    Europe #>                    FAO.ecozone         GEZ #> 1           Tropical shrubland    Tropical #> 2     Boreal coniferous forest      Boreal #> 3    Temperate mountain system   Temperate #> 4       Subtropical dry forest Subtropical #> 5       Subtropical dry forest Subtropical #> 6       Subtropical dry forest Subtropical #> 7       Subtropical dry forest Subtropical #> 8       Subtropical dry forest Subtropical #> 9    Temperate mountain system   Temperate #> 10 Subtropical mountain system Subtropical  resultApply <- TempApply(sample_plots_gez, 2004) resultApply #>    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA     POINT_X   POINT_Y      ZONE #> 1      EU2  97.17177     2001   0.196   1.3059145  42.59214    Europe #> 2      EU2  62.49786     2000   0.196  -3.9889352  40.33963    Europe #> 3      EU2  57.64102     2003   0.196  -2.7070556  42.68534    Europe #> 4      EU1  63.39700     2008   0.015  15.2187262  59.81792    Europe #> 5      EU2  82.59592     2007   0.196  -7.1823899  37.34714    Europe #> 6      EU2  33.56841     2007   0.196  -7.2162433  37.34765    Europe #> 7      EU2  50.63558     2006   0.196  -1.0662342  39.61600    Europe #> 8     AUS1  53.69000     2004   0.160 145.8683679 -20.69546 Australia #> 9      EU2  37.31206     2004   0.196  -5.1210978  40.02713    Europe #> 10     EU2 150.97321     2004   0.196  -0.1585048  42.63245    Europe #>                    FAO.ecozone         GEZ AGB_T_HA_ORIG #> 1    Temperate mountain system   Temperate      87.87177 #> 2       Subtropical dry forest Subtropical      46.49786 #> 3  Subtropical mountain system Subtropical      55.14102 #> 4     Boreal coniferous forest      Boreal      67.79700 #> 5       Subtropical dry forest Subtropical      94.59592 #> 6       Subtropical dry forest Subtropical      45.56841 #> 7       Subtropical dry forest Subtropical      58.63558 #> 8           Tropical shrubland    Tropical      53.69000 #> 9       Subtropical dry forest Subtropical      37.31206 #> 10   Temperate mountain system   Temperate     150.97321  resultVar <- TempVar(sample_plots_gez, 2004) resultVar #>    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA     POINT_X   POINT_Y      ZONE #> 1      EU2  98.67177     2001   0.196   1.3059145  42.59214    Europe #> 2      EU2  58.49786     2000   0.196  -3.9889352  40.33963    Europe #> 3      EU2  57.01602     2003   0.196  -2.7070556  42.68534    Europe #> 4      EU1  67.79700     2008   0.015  15.2187262  59.81792    Europe #> 5      EU2  85.59592     2007   0.196  -7.1823899  37.34714    Europe #> 6      EU2  36.56841     2007   0.196  -7.2162433  37.34765    Europe #> 7      EU2  52.63558     2006   0.196  -1.0662342  39.61600    Europe #> 8     AUS1  53.69000     2004   0.160 145.8683679 -20.69546 Australia #> 9      EU2  37.31206     2004   0.196  -5.1210978  40.02713    Europe #> 10     EU2 150.97321     2004   0.196  -0.1585048  42.63245    Europe #>                    FAO.ecozone         GEZ sdGrowth #> 1    Temperate mountain system   Temperate   10.800 #> 2       Subtropical dry forest Subtropical   12.000 #> 3  Subtropical mountain system Subtropical    1.875 #> 4     Boreal coniferous forest      Boreal    0.000 #> 5       Subtropical dry forest Subtropical    9.000 #> 6       Subtropical dry forest Subtropical    9.000 #> 7       Subtropical dry forest Subtropical    6.000 #> 8           Tropical shrubland    Tropical    0.000 #> 9       Subtropical dry forest Subtropical    0.000 #> 10   Temperate mountain system   Temperate    0.000"},{"path":"https://atnt.github.io/Plot2Map/reference/TempApplyVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply temporal adjustment and compute temporal variance in plot biomass â TempApplyVar","title":"Apply temporal adjustment and compute temporal variance in plot biomass â TempApplyVar","text":"function adjusts plot biomass values specified map year using growth-rate increments computes temporal variance (standard deviation) biomass changes based growth-rate standard deviations. combines functionality TempApply TempVar single call.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApplyVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply temporal adjustment and compute temporal variance in plot biomass â TempApplyVar","text":"","code":"TempApplyVar(plt, map_year, gez = \"all\", gr = NULL, sds = NULL)"},{"path":"https://atnt.github.io/Plot2Map/reference/TempApplyVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply temporal adjustment and compute temporal variance in plot biomass â TempApplyVar","text":"plt data frame sf object containing plot data. data frame input format, longitude latitude coordinates placed \"POINT_X\" \"POINT_Y\" columns respectively WGS 84 CRS. map_year Numeric value indicating AGB map year. gez Character string specifying Global Ecological Zones (GEZ) interest apply. \"\" (default), GEZ plt calculated. gr Optional data.frame growth rates containing columns GEZ, ZONE, FAO.ecozone, GR1, GR2, GR3. NULL, default data Plot2Map used. sds Optional data.frame growth rate standard deviations containing columns GEZ, ZONE, FAO.ecozone, SD1, SD2, SD3. NULL, default data Plot2Map used.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApplyVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply temporal adjustment and compute temporal variance in plot biomass â TempApplyVar","text":"data.frame following columns: AGB_T_HA Adjusted biomass values specified map_year. AGB_T_HA_ORIG Original biomass values adjustment. sdGrowth Temporal standard deviation biomass adjustment. Additional columns input plt.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempApplyVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply temporal adjustment and compute temporal variance in plot biomass â TempApplyVar","text":"","code":"library(Plot2Map) set.seed(42) sample_plots <- plots[sample(nrow(plots), 10), ] sample_plots_gez <- BiomePair(sample_plots) result <- TempApplyVar(sample_plots_gez, map_year = 2004) head(result) #>   PLOT_ID AGB_T_HA AVG_YEAR SIZE_HA   POINT_X  POINT_Y   ZONE #> 1     EU2 97.17177     2001   0.196  1.305915 42.59214 Europe #> 2     EU2 62.49786     2000   0.196 -3.988935 40.33963 Europe #> 3     EU2 57.64102     2003   0.196 -2.707056 42.68534 Europe #> 4     EU1 63.39700     2008   0.015 15.218726 59.81792 Europe #> 5     EU2 82.59592     2007   0.196 -7.182390 37.34714 Europe #> 6     EU2 33.56841     2007   0.196 -7.216243 37.34765 Europe #>                   FAO.ecozone         GEZ AGB_T_HA_ORIG sdGrowth #> 1   Temperate mountain system   Temperate      87.87177      9.3 #> 2      Subtropical dry forest Subtropical      46.49786     16.0 #> 3 Subtropical mountain system Subtropical      55.14102      2.5 #> 4    Boreal coniferous forest      Boreal      67.79700      4.4 #> 5      Subtropical dry forest Subtropical      94.59592     12.0 #> 6      Subtropical dry forest Subtropical      45.56841     12.0"},{"path":"https://atnt.github.io/Plot2Map/reference/TempVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate temporal variance in plot biomass â TempVar","title":"Calculate temporal variance in plot biomass â TempVar","text":"function calculates temporal variance plot biomass based growth rate standard deviations. computes standard deviation growth plot.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate temporal variance in plot biomass â TempVar","text":"","code":"TempVar(plt, map_year, gez = \"all\")"},{"path":"https://atnt.github.io/Plot2Map/reference/TempVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate temporal variance in plot biomass â TempVar","text":"plt data frame sf object containing plot data. data frame input format, longitude latitude coordinates placed \"POINT_X\" \"POINT_Y\" columns respectively WGS 84 CRS. map_year Numeric value indicating AGB map year. gez Character string specifying Global Ecological Zones (GEZ) interest apply. \"\" (default), GEZ plt calculated.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate temporal variance in plot biomass â TempVar","text":"data frame calculated growth standard deviations.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TempVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate temporal variance in plot biomass â TempVar","text":"","code":"set.seed(42) sample_plots <- plots[sample(nrow(plots), 10), ] sample_plots #>      PLOT_ID     POINT_X   POINT_Y  AGB_T_HA AVG_YEAR SIZE_HA #> 2369     EU2   1.3059145  42.59214  87.87177     2001   0.196 #> 5273     EU2  -0.1585048  42.63245 150.97321     2004   0.196 #> 1252     EU2  -1.0662342  39.61600  58.63558     2006   0.196 #> 356      EU2  -5.1210978  40.02713  37.31206     2004   0.196 #> 7700     EU1  15.2187262  59.81792  67.79700     2008   0.015 #> 3954     EU2  -7.1823899  37.34714  94.59592     2007   0.196 #> 5403     EU2  -7.2162433  37.34765  45.56841     2007   0.196 #> 932      EU2  -2.7070556  42.68534  55.14102     2003   0.196 #> 5637    AUS1 145.8683679 -20.69546  53.69000     2004   0.160 #> 4002     EU2  -3.9889352  40.33963  46.49786     2000   0.196  sample_plots_gez <- BiomePair(sample_plots) sample_plots_gez #>    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA     POINT_X   POINT_Y      ZONE #> 1     AUS1  53.69000     2004   0.160 145.8683679 -20.69546 Australia #> 2      EU1  67.79700     2008   0.015  15.2187262  59.81792    Europe #> 3      EU2  87.87177     2001   0.196   1.3059145  42.59214    Europe #> 4      EU2  94.59592     2007   0.196  -7.1823899  37.34714    Europe #> 5      EU2  45.56841     2007   0.196  -7.2162433  37.34765    Europe #> 6      EU2  58.63558     2006   0.196  -1.0662342  39.61600    Europe #> 7      EU2  37.31206     2004   0.196  -5.1210978  40.02713    Europe #> 8      EU2  46.49786     2000   0.196  -3.9889352  40.33963    Europe #> 9      EU2 150.97321     2004   0.196  -0.1585048  42.63245    Europe #> 10     EU2  55.14102     2003   0.196  -2.7070556  42.68534    Europe #>                    FAO.ecozone         GEZ #> 1           Tropical shrubland    Tropical #> 2     Boreal coniferous forest      Boreal #> 3    Temperate mountain system   Temperate #> 4       Subtropical dry forest Subtropical #> 5       Subtropical dry forest Subtropical #> 6       Subtropical dry forest Subtropical #> 7       Subtropical dry forest Subtropical #> 8       Subtropical dry forest Subtropical #> 9    Temperate mountain system   Temperate #> 10 Subtropical mountain system Subtropical  resultApply <- TempApply(sample_plots_gez, 2004) resultApply #>    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA     POINT_X   POINT_Y      ZONE #> 1      EU2  97.17177     2001   0.196   1.3059145  42.59214    Europe #> 2      EU2  62.49786     2000   0.196  -3.9889352  40.33963    Europe #> 3      EU2  57.64102     2003   0.196  -2.7070556  42.68534    Europe #> 4      EU1  63.39700     2008   0.015  15.2187262  59.81792    Europe #> 5      EU2  82.59592     2007   0.196  -7.1823899  37.34714    Europe #> 6      EU2  33.56841     2007   0.196  -7.2162433  37.34765    Europe #> 7      EU2  50.63558     2006   0.196  -1.0662342  39.61600    Europe #> 8     AUS1  53.69000     2004   0.160 145.8683679 -20.69546 Australia #> 9      EU2  37.31206     2004   0.196  -5.1210978  40.02713    Europe #> 10     EU2 150.97321     2004   0.196  -0.1585048  42.63245    Europe #>                    FAO.ecozone         GEZ AGB_T_HA_ORIG #> 1    Temperate mountain system   Temperate      87.87177 #> 2       Subtropical dry forest Subtropical      46.49786 #> 3  Subtropical mountain system Subtropical      55.14102 #> 4     Boreal coniferous forest      Boreal      67.79700 #> 5       Subtropical dry forest Subtropical      94.59592 #> 6       Subtropical dry forest Subtropical      45.56841 #> 7       Subtropical dry forest Subtropical      58.63558 #> 8           Tropical shrubland    Tropical      53.69000 #> 9       Subtropical dry forest Subtropical      37.31206 #> 10   Temperate mountain system   Temperate     150.97321  resultVar <- TempVar(sample_plots_gez, 2004) resultVar #>    PLOT_ID  AGB_T_HA AVG_YEAR SIZE_HA     POINT_X   POINT_Y      ZONE #> 1      EU2  98.67177     2001   0.196   1.3059145  42.59214    Europe #> 2      EU2  58.49786     2000   0.196  -3.9889352  40.33963    Europe #> 3      EU2  57.01602     2003   0.196  -2.7070556  42.68534    Europe #> 4      EU1  67.79700     2008   0.015  15.2187262  59.81792    Europe #> 5      EU2  85.59592     2007   0.196  -7.1823899  37.34714    Europe #> 6      EU2  36.56841     2007   0.196  -7.2162433  37.34765    Europe #> 7      EU2  52.63558     2006   0.196  -1.0662342  39.61600    Europe #> 8     AUS1  53.69000     2004   0.160 145.8683679 -20.69546 Australia #> 9      EU2  37.31206     2004   0.196  -5.1210978  40.02713    Europe #> 10     EU2 150.97321     2004   0.196  -0.1585048  42.63245    Europe #>                    FAO.ecozone         GEZ sdGrowth #> 1    Temperate mountain system   Temperate   10.800 #> 2       Subtropical dry forest Subtropical   12.000 #> 3  Subtropical mountain system Subtropical    1.875 #> 4     Boreal coniferous forest      Boreal    0.000 #> 5       Subtropical dry forest Subtropical    9.000 #> 6       Subtropical dry forest Subtropical    9.000 #> 7       Subtropical dry forest Subtropical    6.000 #> 8           Tropical shrubland    Tropical    0.000 #> 9       Subtropical dry forest Subtropical    0.000 #> 10   Temperate mountain system   Temperate    0.000"},{"path":"https://atnt.github.io/Plot2Map/reference/ToDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Plot Dataset to the WUR Plot Database â ToDatabase","title":"Integrate Plot Dataset to the WUR Plot Database â ToDatabase","text":"function prepares plot dataset integration WUR Plot Database adding required metadata standardizing data format.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/ToDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Plot Dataset to the WUR Plot Database â ToDatabase","text":"","code":"ToDatabase(plt, CODE = \"AFR_GHA\", mapYear, dataDir = \"data\")"},{"path":"https://atnt.github.io/Plot2Map/reference/ToDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Plot Dataset to the WUR Plot Database â ToDatabase","text":"plt data frame containing plot data. CODE Character string specifying country/region code (e.g., 'AFR_GHA'). mapYear Numeric value specifying map year (10, 17, 18). dataDir Character string specifying directory containing biome/realm data files. Defaults \"data\" specified.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/ToDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate Plot Dataset to the WUR Plot Database â ToDatabase","text":"data frame formatted WUR Plot Database standardized columns.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/ToDatabase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrate Plot Dataset to the WUR Plot Database â ToDatabase","text":"","code":"if (FALSE) { # \\dontrun{ data(\"plots\") formatted_data <- ToDatabase(plots, CODE = \"AFR_GHA\", mapYear = 10) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/TwoPlots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a comparison plot of two AGB datasets â TwoPlots","title":"Create a comparison plot of two AGB datasets â TwoPlots","text":"function creates plot comparing two sets AGB measurements, useful comparing different processing methods datasets. sets shown binned data error bars different colors.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TwoPlots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a comparison plot of two AGB datasets â TwoPlots","text":"","code":"TwoPlots(   x,   y,   x1,   y1,   caption = \"\",   fname = \"\",   title = \"\",   outDir = \"results\" )"},{"path":"https://atnt.github.io/Plot2Map/reference/TwoPlots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a comparison plot of two AGB datasets â TwoPlots","text":"x Numeric vector first reference AGB values. y Numeric vector first mapped AGB values (length x). x1 Numeric vector second reference AGB values. y1 Numeric vector second mapped AGB values (length x1). caption Character string plot title/caption. fname Character string specifying output file name saving plot. empty, plot displayed saved. title Character string specifying comparison type: 'harmo' harmonized data comparison, value weighted comparison (default: \"\"). outDir Character string specifying output directory saving plot (default: \"results\").","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TwoPlots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a comparison plot of two AGB datasets â TwoPlots","text":"Invisibly returns NULL. function creates plot side effect.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/TwoPlots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a comparison plot of two AGB datasets â TwoPlots","text":"","code":"if (FALSE) { # \\dontrun{ data(\"plots\") set.seed(42) ref_data <- plots$AGB_T_HA[1:100] map_data1 <- ref_data + rnorm(100, 0, 20) map_data2 <- ref_data + rnorm(100, 5, 15) TwoPlots(ref_data, map_data1, ref_data, map_data2,           \"Comparison of Methods\", \"comparison_plot.png\", \"harmo\") } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/assign_strata_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign strata weights to circular plots â assign_strata_weights","title":"Assign strata weights to circular plots â assign_strata_weights","text":"Assigns predefined strata weights circular plots based strata classification. internal helper function used StrataAGB intended direct use.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/assign_strata_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign strata weights to circular plots â assign_strata_weights","text":"","code":"assign_strata_weights(plots, strata_weights = c(A = 0.22, B = 0.22, C = 0.68))"},{"path":"https://atnt.github.io/Plot2Map/reference/assign_strata_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign strata weights to circular plots â assign_strata_weights","text":"plots data frame containing plot data least stratum column (character factor). strata_weights named numeric vector names strata levels values weights. Defaults c(\"\" = 0.22, \"B\" = 0.22, \"C\" = 0.68).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/assign_strata_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign strata weights to circular plots â assign_strata_weights","text":"data frame additional wt column containing assigned weights.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/assign_strata_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign strata weights to circular plots â assign_strata_weights","text":"","code":"# Example: Assign weights to a simple plot data frame   strata_plots <- data.frame(stratum = c(\"A\", \"B\", \"C\"))   weighted_plots <- assign_strata_weights(strata_plots)   print(weighted_plots) #>   stratum   wt #> 1       A 0.22 #> 2       B 0.22 #> 3       C 0.68"},{"path":"https://atnt.github.io/Plot2Map/reference/blockCorr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute block covariance matrix â blockCorr","title":"Compute block covariance matrix â blockCorr","text":"Calculates covariance matrix block based variogram model, discretising block pixels computing covariances pairs points within block.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/blockCorr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute block covariance matrix â blockCorr","text":"","code":"blockCorr(lat, rsl, model, nx, ny)"},{"path":"https://atnt.github.io/Plot2Map/reference/blockCorr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute block covariance matrix â blockCorr","text":"lat Latitude degrees. rsl Resolution vector x y resolution degrees (e.g., c(xres, yres)). model variogram model object gstat package. nx Number pixels x-direction. ny Number pixels y-direction.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/blockCorr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute block covariance matrix â blockCorr","text":"numeric matrix representing covariance pairs points within block.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/blockCorr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute block covariance matrix â blockCorr","text":"","code":"#Compute covariance matrix for a 5x5 pixel block:   library(gstat)   vgm_model <- vgm(psill = 1, model = \"Sph\", range = 100, nugget = 0.1)   res <- c(0.02, 0.02)  # 0.02-degree resolution   result <- blockCorr(lat = 40, rsl = res, model = vgm_model, nx = 5, ny = 5)   dim(result)  # Should be 25 x 25 #> [1] 25 25"},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"function provides unified framework calculating uncertainty across different plot data types. automatically detects plot data type, preserves existing uncertainty components present, calculates missing components needed.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"","code":"calculateTotalUncertainty(   plot_data,   map_year,   map_resolution = 100,   biome_info = TRUE,   se_data = NULL )"},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"plot_data data frame containing plot data. Required columns: PLOT_ID - Plot identifier AGB_T_HA - -ground biomass tons per hectare SIZE_HA - Plot size hectares GEZ - Global ecological zone (e.g., \"Tropical\", \"Temperate\", \"Boreal\", \"Subtropical\") Additional columns required biome_info=TRUE: ZONE - Continental zone (e.g., \"Europe\", \"Asia\", \"Africa\") AVG_YEAR - Year plot measurement temporal adjustment sdTree, sdSE, sdGrowth columns exist, preserved. map_year Numeric value indicating map year temporal adjustment. used calculate growth uncertainty based time difference plot measurement map production. map_resolution Numeric value indicating map resolution meters (default: 100). affects sampling error calculations based difference plot size pixel size. biome_info Logical indicating whether use biome information (GEZ column) growth uncertainty calculation (default: TRUE). TRUE, function uses TempVar requires 'ZONE', 'GEZ', 'AVG_YEAR' columns present plot_data. FALSE, function requires sdGrowth column provided input data. se_data Optional data frame sampling error data can used instead loading se.csv. Must contain columns: SIZE_HA - Plot size hectares RS_HA - Pixel resolution hectares ratio - Ratio plot size pixel size cv - Coefficient variation (percent)","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"list containing: data input plot data additional uncertainty columns: sdTree - Standard deviation measurement error sdSE - Standard deviation sampling error sdGrowth - Standard deviation growth/temporal uncertainty varPlot - Total variance (sum squared standard deviations) sdTotal - Total standard deviation (square root varPlot) plot_type detected plot data type: \"tree_level\", \"point\", \"polygon\", \"nested\", \"lidar\" uncertainty_components relative contribution uncertainty component proportion total variance","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"function handles three primary sources uncertainty: Measurement uncertainty (sdTree): Derived allometric equations, wood density estimates, measurement error. tree-level data, calculated BIOMASS package Monte Carlo methods. plot-level data, estimated using random forest model trained large dataset. Sampling uncertainty (sdSE): Accounts sampling error introduced differing plot sizes vs. pixel sizes, following approach RÃ©jou-MÃ©chain et al. (2014). Growth uncertainty (sdGrowth): Adjusts temporal differences plot measurement year map production year, using growth rates specific ecological zone. components combined using error propagation principles: $$varPlot = sdTree^2 + sdSE^2 + sdGrowth^2$$ $$sdTotal = \\sqrt{varPlot}$$","code":""},{"path":[]},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"step-measurement-error-sdtree-","dir":"Reference","previous_headings":"","what":"Step 1: Measurement Error (sdTree)","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"tree-level data: Uses BIOMASS package Monte Carlo simulations account wood density uncertainty, diameter measurement errors, allometric model errors. plot-level data: Uses random forest model trained thousands plots across biomes predict measurement uncertainty based plot AGB, plot size, ecological zone. pre-existing sdTree column exists, values preserved.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"step-sampling-error-sdse-","dir":"Reference","previous_headings":"","what":"Step 2: Sampling Error (sdSE)","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"Uses random forest model trained geo-simulation data relates plot--pixel size ratios coefficient variation. model considers relationship plot size (SIZE_HA), remote sensing pixel size (RS_HA), ratio. resulting coefficient variation converted standard deviation multiplying mean AGB. Custom sampling error data can provided se_data parameter.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"step-growth-uncertainty-sdgrowth-","dir":"Reference","previous_headings":"","what":"Step 3: Growth Uncertainty (sdGrowth)","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"biome_info = TRUE, uses biome-specific growth rates uncertainty TempVar function. function considers time difference plot measurement year (AVG_YEAR) map year. ecological zone (GEZ) processed separately apply biome-specific growth rates. biome information available biome_info = FALSE, function requires sdGrowth column provided input data.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"step-total-uncertainty","dir":"Reference","previous_headings":"","what":"Step 4: Total Uncertainty","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"Combines uncertainty components summing variances: varPlot = sdTree^2 + sdSE^2 + sdGrowth^2 Calculates total standard deviation sdTotal = sqrt(varPlot) Reports relative contribution component total variance.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculateTotalUncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comprehensive uncertainty calculation for all plot data types â calculateTotalUncertainty","text":"","code":"# Example 1: Using existing plot data # First load the sample plots dataset included with the package data(plots)  # Create a subset of plots for demonstration set.seed(42) sample_plots <- plots[sample(nrow(plots), 5), ]  # Add biome information (required for uncertainty calculation) sample_plots <- BiomePair(sample_plots)  # Apply TempApplyVar to adjust biomass to map year and calculate temporal variance sample_plots <- TempApplyVar(sample_plots, map_year = 2020)  # Calculate total uncertainty components for map year 2020 result <- calculateTotalUncertainty(sample_plots, map_year = 2020, map_resolution = 100) #> Calculating tree measurement uncertainty using RF model #> Calculating sampling uncertainty using Rejou-Mechain approach #> Loading sampling error data from package file #> Using existing growth uncertainty (sdGrowth) values #> Total uncertainty calculated for plot data of type: point  # View the results head(result$data) #>   PLOT_ID AGB_T_HA AVG_YEAR SIZE_HA    POINT_X  POINT_Y   ZONE #> 1     EU1  80.9970     2008   0.015 15.2187262 59.81792 Europe #> 2     EU2 146.7718     2001   0.196  1.3059145 42.59214 Europe #> 3     EU2 114.6356     2006   0.196 -1.0662342 39.61600 Europe #> 4     EU2 101.3121     2004   0.196 -5.1210978 40.02713 Europe #> 5     EU2 150.9732     2004   0.196 -0.1585048 42.63245 Europe #>                 FAO.ecozone         GEZ AGB_T_HA_ORIG sdGrowth   sdTree RS_HA #> 1  Boreal coniferous forest      Boreal      67.79700     13.2 29.81063     1 #> 2 Temperate mountain system   Temperate      87.87177     58.9 24.96373     1 #> 3    Subtropical dry forest Subtropical      58.63558     56.0 30.15383     1 #> 4    Subtropical dry forest Subtropical      37.31206     64.0 28.39875     1 #> 5 Temperate mountain system   Temperate     150.97321      0.0 24.53302     1 #>   ratio     sdSE  varPlot  sdTotal #> 1 0.015 52.88286 3859.511 62.12496 #> 2 0.196 22.81788 4613.054 67.91946 #> 3 0.196 22.81788 4565.910 67.57151 #> 4 0.196 22.81788 5423.145 73.64200 #> 5 0.196 22.81788 1122.525 33.50411  # See the relative contribution of each uncertainty component result$uncertainty_components #> measurement    sampling      growth  #>   0.2498749   0.3022655   0.4478596   # Example 2: Working with data that already has measurement uncertainty # First process tree-level data to get measurement uncertainty # Load sample tree data tree_data <- utils::read.csv(sample_file(\"SampleTree.csv\")) tree_locations <- utils::read.csv(sample_file(\"SampleTreeXY.csv\"))  # Calculate AGB and measurement uncertainty tree_results <- sd_tree(tree_data, tree_locations, region = \"World\") #> The reference dataset contains 16467 wood density values #> Your taxonomic table contains 340 taxa #> No tree height data found in original plot data. Calculating height using BIOMASS height-diameter model.  # Add required biome information tree_results <- BiomePair(tree_results)  # Calculate total uncertainty with tree data tree_uncertainty <- calculateTotalUncertainty(tree_results, map_year = 2020) #> Using existing sdTree values for tree_level data #> Calculating sampling uncertainty using Rejou-Mechain approach #> Loading sampling error data from package file #> Calculating growth uncertainty by biome #> Total uncertainty calculated for plot data of type: tree_level  # Example 3: Using custom sampling error data # Create custom sampling error data (coefficient of variation by plot/pixel size ratio) custom_se_data <- data.frame(   SIZE_HA = c(0.1, 0.25, 0.5, 1.0),  # Plot sizes in hectares   RS_HA = c(1, 1, 1, 1),            # Remote sensing pixel size in hectares   ratio = c(0.1, 0.25, 0.5, 1.0),   # Ratio of plot size to pixel size   cv = c(20, 15, 10, 5)             # Coefficient of variation (%) )  # Calculate uncertainty using custom sampling error model custom_result <- calculateTotalUncertainty(   sample_plots,   map_year = 2020,   map_resolution = 100,   se_data = custom_se_data ) #> Calculating tree measurement uncertainty using RF model #> Calculating sampling uncertainty using Rejou-Mechain approach #> Using provided sampling error data #> Using existing growth uncertainty (sdGrowth) values #> Total uncertainty calculated for plot data of type: point  # Example 4: Using manual growth uncertainty values # First, prepare data with manual sdGrowth values manual_growth_plots <- sample_plots # Add manual growth uncertainty of 7% of AGB manual_growth_plots$sdGrowth <- manual_growth_plots$AGB_T_HA * 0.07  # Now calculate uncertainty with biome_info = FALSE simple_result <- calculateTotalUncertainty(   manual_growth_plots,   map_year = 2020,   map_resolution = 100,   biome_info = FALSE ) #> Calculating tree measurement uncertainty using RF model #> Calculating sampling uncertainty using Rejou-Mechain approach #> Loading sampling error data from package file #> Using existing growth uncertainty (sdGrowth) values #> Total uncertainty calculated for plot data of type: point"},{"path":"https://atnt.github.io/Plot2Map/reference/calculate_gfc_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the GFC product tiles needed for a given area â calculate_gfc_tiles","title":"Calculate the GFC product tiles needed for a given area â calculate_gfc_tiles","text":"Determines Global Forest Change (GFC) product tiles intersect specified area interest.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculate_gfc_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the GFC product tiles needed for a given area â calculate_gfc_tiles","text":"","code":"calculate_gfc_tiles(aoi, recreate_grid = FALSE)"},{"path":"https://atnt.github.io/Plot2Map/reference/calculate_gfc_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the GFC product tiles needed for a given area â calculate_gfc_tiles","text":"aoi sf object representing Area Interest recreate_grid Logical. TRUE, force recreation GFC tiles grid","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculate_gfc_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the GFC product tiles needed for a given area â calculate_gfc_tiles","text":"filtered sf object containing tiles intersect AOI","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/calculate_gfc_tiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the GFC product tiles needed for a given area â calculate_gfc_tiles","text":"","code":"if (FALSE) { # \\dontrun{ library(sf)  # Create a polygon in Central Africa aoi <- st_sf(geometry = st_sfc(st_polygon(list(cbind(   c(20, 21, 21, 20, 20),   c(-1, -1, 1, 1, -1)))), crs = 4326))  tiles <- calculate_gfc_tiles(aoi) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/check_and_convert_plt.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and covert plt input â check_and_convert_plt","title":"Check and covert plt input â check_and_convert_plt","text":"helper function checks input sf object dataframe, ensures contains required coordinate columns.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/check_and_convert_plt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and covert plt input â check_and_convert_plt","text":"","code":"check_and_convert_plt(plt, ez = FALSE)"},{"path":"https://atnt.github.io/Plot2Map/reference/check_and_convert_plt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and covert plt input â check_and_convert_plt","text":"plt data frame sf object containing plot data. data frame input format, longitude latitude coordinates placed \"POINT_X\" \"POINT_Y\" columns respectively WGS 84 CRS.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/check_and_convert_plt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and covert plt input â check_and_convert_plt","text":"dataframe \"POINT_X\" \"POINT_Y\" columns","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/check_and_convert_plt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and covert plt input â check_and_convert_plt","text":"input sf object, converted dataframe coordinate columns. function checks presence \"POINT_X\" \"POINT_Y\" columns.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute tree cover forest mask for a specific year â compute_treecover","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"function computes tree cover forest mask layer given year based 2000 tree cover baseline - Hansen Global Forest Change (GFC) dataset 2010 tree cover baseline - GLAD 2010 Tree Canopy Cover dataset.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"","code":"compute_treecover(   year,   gfc_folder = \"data/GFC\",   treecover_threshold = NULL,   coords = NULL,   output_folder = \"data/treecover_calc\",   num_cores = 1,   baseline = 2010 )"},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"year Integer. year compute tree cover (2001-2023). gfc_folder Character. Path folder containing GFC dataset files. Default \"data/GFC\". treecover_threshold Numeric. Optional threshold tree cover (0-100) baseline year. provided, areas tree cover values >= threshold considered. Default NULL (threshold). coords Character. Coordinates tile process, e.g., \"10N_020E\". NULL, processes available tiles. output_folder Character. Path folder output rasters saved. num_cores Integer. Number cores use parallel processing. baseline Integer. Baseline year tree cover dataset. Can 2010 (default) 2000.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"list. coords specified, one tile processed returns file path single raster. Otherwise, returns set file paths, representing tree cover baseline specified year different tiles. rasters computed taking tree cover values baseline rasters, removing pixels forest loss recorded provided year. tree cover threshold provided, tree cover pixels threshold set NA. Rasters saved GeoTIFF file saved output_folder.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"function computes tree cover forest mask leveraging baseline tree cover forest loss data. uses two primary types input files: Tree cover data, serves baseline: 2000 baseline, function uses files Hansen dataset tree cover. 2010 baseline, function uses GLAD tree cover files. Tree cover values represent percentage tree cover (0-100\\ Forest loss year data: function uses Hansen Global Forest Change lossyear files. Values files indicate year forest loss (1-23, corresponding years 2001-2023), 0 loss occurred. function applies following steps: reads tree cover forest loss rasters specified year location. treecover_threshold provided, tree cover pixels values threshold set NA. removes pixels forest loss recorded specified year. resulting raster represents tree cover forest mask specified year, areas low tree cover forest loss masked . function saves resulting raster GeoTIFF file output_folder.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"Hansen, M.C., Potapov, P.V., Moore, R., Hancher, M., Turubanova, S.., Tyukavina, ., Thau, D., Stehman, S.V., Goetz, S.J., Loveland, T.R., Kommareddy, ., Egorov, ., Chini, L., Justice, C.O., Townshend, J.R.G., 2013, High-Resolution Global Maps 21st-Century Forest Cover Change: Science, v. 342, . 6160, p. 850-853, http://www.sciencemag.org/content/342/6160/850.abstract.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/compute_treecover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute tree cover forest mask for a specific year â compute_treecover","text":"","code":"if (FALSE) { # \\dontrun{ # Compute all tiles tree cover for 2015 using 2010 baseline treecover_2015 <- compute_treecover(2015)  # Compute 30% thresholded tree cover for the 10N, 20E tile for 2005 using # 2000 tree cover baseline treecover_2020 <- compute_treecover(2020,                                     treecover_threshold = 30,                                     coords = \"10N_020E\",                                     output_folder = \"data/treecover_calc\",                                     baseline = 2000) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/create_gfc_tiles_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a global grid of GFC tiles â create_gfc_tiles_grid","title":"Create a global grid of GFC tiles â create_gfc_tiles_grid","text":"Creates global grid 10x10 degree tiles covering world, matching Hansen Global Forest Change product naming convention.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/create_gfc_tiles_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a global grid of GFC tiles â create_gfc_tiles_grid","text":"","code":"create_gfc_tiles_grid()"},{"path":"https://atnt.github.io/Plot2Map/reference/create_gfc_tiles_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a global grid of GFC tiles â create_gfc_tiles_grid","text":"sf object representing global grid GFC tiles.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/determineDataType.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine plot data type from structure and columns â determineDataType","title":"Determine plot data type from structure and columns â determineDataType","text":"helper function identifies type plot data based structure available columns. performs series checks following priority order:","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/determineDataType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine plot data type from structure and columns â determineDataType","text":"","code":"determineDataType(plot_data)"},{"path":"https://atnt.github.io/Plot2Map/reference/determineDataType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine plot data type from structure and columns â determineDataType","text":"plot_data data frame containing plot data","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/determineDataType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine plot data type from structure and columns â determineDataType","text":"Character string indicating plot data type: \"tree_level\", \"point\", \"polygon\", \"nested\", \"lidar\"","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/determineDataType.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine plot data type from structure and columns â determineDataType","text":"Checks data sf object (classifies \"polygon\") Checks column names indicating nested plot structure Checks complex IDs GUIDs ID columns suggest nested structure Checks processed tree-level data AGB standard deviation Checks raw tree data standard column names Checks non-standard tree data based column name patterns Checks LiDAR indicators like \"cv\" \"raster\" columns Defaults \"point\" type type detected","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_esacci_biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ESA CCI biomass GeoTIFF data â download_esacci_biomass","title":"Download ESA CCI biomass GeoTIFF data â download_esacci_biomass","text":"function downloads ESA CCI Biomass GeoTIFF data CEDA Archive.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_esacci_biomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ESA CCI biomass GeoTIFF data â download_esacci_biomass","text":"","code":"download_esacci_biomass(   esacci_biomass_year = \"latest\",   esacci_biomass_version = \"latest\",   esacci_folder = \"data/ESACCI-BIOMASS\",   n_cores = parallel::detectCores() - 1,   timeout = 600,   file_names = NULL )"},{"path":"https://atnt.github.io/Plot2Map/reference/download_esacci_biomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ESA CCI biomass GeoTIFF data â download_esacci_biomass","text":"esacci_biomass_year ESA CCI BIOMASS AGB tiles year use. Use either 2010, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 \"latest\" (default). esacci_biomass_version ESA CCI BIOMASS AGB tiles version use. Use either \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\", \"v5.01\", \"v6.0\" \"latest\" (default). esacci_folder Directory save downloaded ESA CCI BIOMASS AGB files. Default relative path \"data/ESACCI-BIOMASS\". n_cores Number cores use parallel download. timeout Number seconds reaching file download timeout. file_names Character vector specific filenames download. NULL (default), files downloaded.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_esacci_biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ESA CCI biomass GeoTIFF data â download_esacci_biomass","text":"character vector downloaded file paths.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_esacci_biomass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download ESA CCI biomass GeoTIFF data â download_esacci_biomass","text":"Santoro, M.; Cartus, O. (2025): ESA Biomass Climate Change Initiative (Biomass_cci): Global datasets forest -ground biomass years 2007, 2010, 2015, 2016, 2017, 2018, 2019, 2020, 2021 2022, v6.0. NERC EDS Centre Environmental Data Analysis, 17 April 2025. doi:10.5285/95913ffb6467447ca72c4e9d8cf30501.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"Downloads, processes, saves GEDI L4B Gridded Biomass data specified region interest. function retrieves data via ORNL DAAC STAC API, filters specified band, creates data cube, saves result GeoTIFF.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"","code":"download_gedi_l4b(   roi = NULL,   gedi_l4b_folder = \"data/GEDI_L4B/\",   collection = \"GEDI_L4B_Gridded_Biomass_V2_1_2299_2.1\",   gedi_l4b_resolution = 0.001,   gedi_l4b_band = \"MU\" )"},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"roi sf object representing region interest. NULL, global extent available GEDI L4B data used. gedi_l4b_folder Character, folder save downloaded GeoTIFF file. Default \"data/GEDI_L4B/\". collection Character, STAC collection ID GEDI L4B data. Default \"GEDI_L4B_Gridded_Biomass_V2_1_2299_2.1\". gedi_l4b_resolution Numeric, spatial resolution processed output GeoTIFF degrees. native resolution GEDI L4B gridded dataset 1 km, approximately 0.001 degrees equator. Default 0.001. gedi_l4b_band Character, band filter . See options Details section . Default \"MU\".","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"Character, file path processed GeoTIFF file.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"function requires valid Earthdata Login account corresponding credentials Ensure set Earthdata Login credentials either: Setting EDL_USER EDL_PASS environment variables .Renviron file. Running earthdatalogin::edl_netrc(username = EDL_USER, password = EDL_PASS) Earthdata Login username password. available bands based GEDI L4B Gridded Biomass Density Version 2.1 documentation: \"MU\": Mean aboveground biomass density (MU): Estimated mean AGBD grid cell, including forest non-forest \"SE\": Mean aboveground biomass density standard error (SE): Standard Error mean estimate, combining sampling modeling uncertainty \"PE\": Standard error fraction estimated mean AGBD. >100%, cell values truncated 100. \"V1\": Variance component 1 (V1) \"V2\": Variance component 2 (V2) \"QF\": Quality flag \"NS\": Number samples \"MI\": Mode interference \"PS\": Prediction stratum \"NC\": Number clusters Consult reference details bands.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"Dubayah, R., et al. (2022). GEDI L4B Gridded Biomass Data, Version 2.1. NASA Earthdata.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gedi_l4b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and process GEDI L4B gridded biomass data â download_gedi_l4b","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage with a defined ROI:   # Define ROI over the Amazon Basin   roi <- sf::st_as_sf(data.frame(y = c(-10, 0), x = c(-70, -60)), coords = c(\"x\", \"y\"), crs = 4326)   # Downloads biomass data for the defined region of interest   output_file <- download_gedi_l4b(roi = roi, gedi_l4b_band = \"MU\")   print(output_file) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/download_gfc_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Global Forest Change (GFC) product tiles â download_gfc_tiles","title":"Download Global Forest Change (GFC) product tiles â download_gfc_tiles","text":"Downloads specified GFC product tiles Hansen et al. Global Forest Change dataset.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gfc_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Global Forest Change (GFC) product tiles â download_gfc_tiles","text":"","code":"download_gfc_tiles(   tiles,   output_dir,   images = c(\"treecover2000\", \"lossyear\"),   dataset = \"GFC-2023-v1.11\",   timeout = 1000 )"},{"path":"https://atnt.github.io/Plot2Map/reference/download_gfc_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Global Forest Change (GFC) product tiles â download_gfc_tiles","text":"tiles sf object GFC tiles information returned calculate_gfc_tiles output_dir Directory downloaded files saved images Character vector specifying image types download. Options include 'treecover2000', 'lossyear', 'gain', 'datamask', 'first', 'last' dataset Version Hansen GFC dataset use (e.g., 'GFC-2023-v1.11') timeout Download timeout seconds","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gfc_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Global Forest Change (GFC) product tiles â download_gfc_tiles","text":"Character vector paths successfully downloaded files","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_gfc_tiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Global Forest Change (GFC) product tiles â download_gfc_tiles","text":"","code":"if (FALSE) { # \\dontrun{ library(sf)  # Create a polygon in Central Africa aoi <- st_sf(geometry = st_sfc(st_polygon(list(cbind(   c(20, 21, 21, 20, 20),   c(-1, -1, 1, 1, -1)))), crs = 4326))  # Calculate required tiles tiles <- calculate_gfc_tiles(aoi)  # Download tree cover and loss year data download_gfc_tiles(   tiles,   \"data/GFC\",   images = c(\"treecover2000\", \"lossyear\"),   dataset = \"GFC-2023-v1.11\" ) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/download_glad_tcc_2010.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","title":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","text":"function downloads Global 2010 Tree Cover 30m data within specified region interest GLAD lab University Maryland.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_glad_tcc_2010.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","text":"","code":"download_glad_tcc_2010(   roi = NULL,   output_folder = \"data/GLAD_TCC_2010\",   n_cores = 1,   timeout = 1800 )"},{"path":"https://atnt.github.io/Plot2Map/reference/download_glad_tcc_2010.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","text":"roi sf object representing region interest. NULL, global extent used. output_folder Directory save downloaded files. Default \"data/GLAD_TCC_2010\". n_cores Number cores use parallel download. Default 1. timeout Number seconds reaching file download timeout. Default 1800.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_glad_tcc_2010.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","text":"character vector downloaded file paths.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_glad_tcc_2010.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","text":"Hansen, M. C., Potapov, P. V., Moore, R., Hancher, M., Turubanova, S. ., Tyukavina, ., ... & Townshend, J. R. G. (2013). High-resolution global maps 21st-century forest cover change. science, 342(6160), 850-853.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_glad_tcc_2010.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Global 2010 Tree Cover 30m data â download_glad_tcc_2010","text":"","code":"if (FALSE) { # \\dontrun{ roi <- st_as_sf(data.frame(x = c(-70, -60), y = c(-10, 0)), coords = c(\"x\", \"y\"), crs = 4326) download_glad_tcc_2010(roi = roi) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/download_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a single GFC tile â download_tile","title":"Download a single GFC tile â download_tile","text":"Downloads single GFC tile verifies download.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a single GFC tile â download_tile","text":"","code":"download_tile(tile_url, local_path, timeout = 1000)"},{"path":"https://atnt.github.io/Plot2Map/reference/download_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a single GFC tile â download_tile","text":"tile_url URL tile download local_path Local path save tile timeout Timeout seconds download","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/download_tile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a single GFC tile â download_tile","text":"Integer: 0 successful, 1 download failed, 2 verification failed","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse dasymetric mapping â invDasymetry","title":"Inverse dasymetric mapping â invDasymetry","text":"function performs inverse dasymetric mapping plot data. selects plots based given criteria, optionally aggregates , calculates forest fraction Ground Biomass (AGB) data plot cell. Inverse dasymetric mapping particularly useful comparing field inventory plot measurements remote sensing biomass maps accounting differences spatial scales forest cover percentages.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse dasymetric mapping â invDasymetry","text":"","code":"invDasymetry(   plot_data = NULL,   clmn = \"ZONE\",   value = \"Europe\",   aggr = NULL,   minPlots = 1,   weighted_mean = FALSE,   is_poly = TRUE,   dataset = \"custom\",   agb_raster_path = NULL,   forest_mask_path = NULL,   threshold = 0,   map_year = NULL,   map_resolution = NULL,   esacci_biomass_year = \"latest\",   esacci_biomass_version = \"latest\",   esacci_folder = \"data/ESACCI-BIOMASS\",   gedi_l4b_folder = \"data/GEDI_L4B/\",   gedi_l4b_band = \"MU\",   gedi_l4b_resolution = 0.001,   gfc_folder = \"data/GFC\",   gfc_dataset_year = \"latest\",   timeout = 600,   parallel = FALSE,   n_cores = parallel::detectCores() - 1,   memfrac = 0.3,   worker_memfrac = 0.2,   batch_size = NULL,   crop_rasters = TRUE )"},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse dasymetric mapping â invDasymetry","text":"plot_data data.frame, Plot dataset containing required columns. non-aggregated mode, required columns \"POINT_X\", \"POINT_Y\", \"AGB_T_HA_ORIG\", \"AGB_T_HA\", \"SIZE_HA\". aggregated mode (aggr NULL), \"varPlot\" column also required, automatically calculated missing. clmn character, Column name plot selection (e.g., \"ZONE\", \"CONTINENT\"). value character, Value select specified column (e.g., \"Europe\", \"Africa\"). aggr numeric, Aggregation factor degrees (e.g., 0.1 0.1-degree cells). Set NULL aggregation. aggregated, plots falling within grid cell combined using inverse variance weighting. minPlots integer, Minimum number plots per aggregated cell. Cells fewer plots excluded. weighted_mean Logical, TRUE weighted mean calculated considering approximate fraction cell covered roi (default FALSE). is_poly logical, Whether input plots polygons (TRUE) converted polygons (FALSE). dataset Character, dataset use AGB estimation. Options \"custom\", \"esacci\", \"gedi\". Default \"custom\". agb_raster_path character, File path custom AGB raster. forest_mask_path character, File path forest mask raster. threshold numeric, Threshold (0-100) tree cover calculation forest masking (e.g. 0 10). pixels tree cover percentage threshold contribute biomass estimates. map_year numeric, year map data. provided, detected automatically available data sources. map_resolution numeric, resolution map data degrees. provided, detected automatically available data sources. Used variance calculation aggregating. esacci_biomass_year ESA CCI BIOMASS AGB tiles year use. Use either 2010, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 \"latest\" (default). esacci_biomass_version ESA CCI BIOMASS AGB tiles version use. Use either \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\", \"v5.01\", \"v6.0\" \"latest\" (default). esacci_folder Directory save downloaded ESA CCI BIOMASS AGB files. Default relative path \"data/ESACCI-BIOMASS\". gedi_l4b_folder Character, folder save downloaded GeoTIFF file. Default \"data/GEDI_L4B/\". gedi_l4b_band Character, band filter . See options Details section . Default \"MU\". gedi_l4b_resolution Numeric, spatial resolution processed output GeoTIFF degrees. native resolution GEDI L4B gridded dataset 1 km, approximately 0.001 degrees equator. Default 0.001. gfc_folder Character string specifying directory download GFC data. gfc_dataset_year Numeric value describing version Hansen data use: year 2018-2023 range \"latest\" (default). timeout Number seconds reaching file download timeout. parallel logical, Enable parallel processing faster computation multi-core systems. Default FALSE. n_cores numeric, Number cores use parallel processing. memfrac numeric, Memory fraction (0-1) Terra use main process. Default 0.3. worker_memfrac numeric, Memory fraction (0-1) Terra use worker process parallel execution (future use - currently fixed 0.2 internally). Default 0.2. batch_size integer, Number plots process batch better memory management. NULL (default), batch size auto-determined based dataset size. crop_rasters logical, Whether crop rasters region interest processing (TRUE default). Set FALSE encounter issues cropping plots widely dispersed.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse dasymetric mapping â invDasymetry","text":"data frame following columns: plotAGB_threshold AGB values given forest threshold (e.g., plotAGB_10 threshold=10). aggregated, values derived weighted means using inverse variance weighting. Units tonnes per hectare (t/ha). tfPlotAGB Tree-filtered plot AGB (aggregated). equivalent AGB_T_HA values input data. orgPlotAGB Original plot AGB, derived AGB_T_HA_ORIG input data. mapAGB AGB map sampling, representing biomass values extracted reference map plot cell location. SIZE_HA Plot size hectares. aggregated cells, mean plot size within cell. x X-coordinate plot cell center (longitude). y Y-coordinate plot cell center (latitude). n Number plots within aggregated cell (included aggr NULL).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse dasymetric mapping â invDasymetry","text":"function performs inverse dasymetric mapping key steps: Plot Selection: Selects plots based specified criteria (clmn value). Spatial Processing (two modes): Non-Aggregated Mode (aggr = NULL): plot processed individually. Tree cover percentage calculated plot Biomass values adjusted based tree cover percentage Aggregated Mode (e.g., aggr = 0.1): Plots grouped grid cells. New grid cell coordinates calculated using integer division Plot measurements aggregated using inverse variance weighting Cells insufficient plot counts (less minPlots) filtered Forest Cover Correction: Tree cover percentage calculated plot cell forest pixels (based threshold) contribute biomass estimates Map Comparison: AGB values sampled reference maps Enables direct comparison field-measured map-estimated biomass","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Inverse dasymetric mapping â invDasymetry","text":"Ensure required columns present input plot data. parallel processing, adjust n_cores based system's capabilities. Large datasets may require significant processing time memory. using aggregation, function automatically calculates varPlot missing.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/invDasymetry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse dasymetric mapping â invDasymetry","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage with sample data library(Plot2Map) data(plots)  # Create a sample dataset and process it set.seed(42) sampled_plots <- plots[sample(nrow(plots), 100), ] plot_data <- Deforested(sampled_plots, gfc_folder = \"data/GFC\", map_year = 2020) plot_data <- BiomePair(plot_data$non_deforested_plots) plot_data <- TempApplyVar(plot_data, 2020)  # Example 1: Non-aggregated mode with custom AGB raster result_individual <- invDasymetry(   plot_data = plot_data,   clmn = \"ZONE\",   value = \"Europe\",   aggr = NULL,  # No aggregation   threshold = 10,  # 10% tree cover threshold   dataset = \"custom\",   agb_raster_path = \"path/to/agb_raster.tif\" )  # Example 2: Aggregated mode with ESA CCI data result_aggregated <- invDasymetry(   plot_data = plot_data,   clmn = \"ZONE\",   value = \"Europe\",   aggr = 0.25,  # 0.25Â° aggregation   minPlots = 2,  # Minimum 2 plots per cell   threshold = 10,   dataset = \"esacci\",   esacci_biomass_year = \"latest\" )  # Compare plot AGB with map AGB plot(   result_aggregated$plotAGB_10,   result_aggregated$mapAGB,   xlab = \"Plot AGB (t/ha)\",   ylab = \"Map AGB (t/ha)\",   main = \"Plot vs Map Biomass Comparison\" ) abline(0, 1, col = \"red\")  # 1:1 line } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample plots data (dataframe points) â plots","title":"Sample plots data (dataframe points) â plots","text":" dataframe containing sample plots longitude latitude point data, Ground Biomass t/ha, average year plot survey, plot size ha (SIZE_HA).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample plots data (dataframe points) â plots","text":"","code":"plots"},{"path":[]},{"path":"https://atnt.github.io/Plot2Map/reference/plots.html","id":"plots","dir":"Reference","previous_headings":"","what":"plots","title":"Sample plots data (dataframe points) â plots","text":"data frame 8321 rows 6 columns: PLOT_ID Plot ID POINT_X Longitude POINT_Y Latitude AGB_T_HA Ground Biomass (t/ha) AVG_YEAR Average year plot survey SIZE_HA Plot size (ha)","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/polyCirc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create circular plots â polyCirc","title":"Create circular plots â polyCirc","text":"Create circular plots","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/polyCirc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create circular plots â polyCirc","text":"","code":"polyCirc(coords_poly, radius = 10)"},{"path":"https://atnt.github.io/Plot2Map/reference/polyCirc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create circular plots â polyCirc","text":"coords_poly data frame POINT_X POINT_Y columns. radius Numeric, radius circular plot meters (default: 10).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/polyCirc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create circular plots â polyCirc","text":"sf object representing circular plot.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/polyIrreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create irregular polygons â polyIrreg","title":"Create irregular polygons â polyIrreg","text":"Create irregular polygons","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/polyIrreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create irregular polygons â polyIrreg","text":"","code":"polyIrreg(coords_poly)"},{"path":"https://atnt.github.io/Plot2Map/reference/polyIrreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create irregular polygons â polyIrreg","text":"coords_poly data frame POINT_X POINT_Y columns.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/polyIrreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create irregular polygons â polyIrreg","text":"sf object representing irregular polygon.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/process_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a single pair of tree cover and forest loss files â process_pair","title":"Process a single pair of tree cover and forest loss files â process_pair","text":"Process single pair tree cover forest loss files","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/process_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a single pair of tree cover and forest loss files â process_pair","text":"","code":"process_pair(   id,   year,   treecover_threshold,   output_folder,   treecover_files,   lossyear_files,   treecover_ids,   lossyear_ids,   baseline )"},{"path":"https://atnt.github.io/Plot2Map/reference/process_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a single pair of tree cover and forest loss files â process_pair","text":"id identifier file pair year year compute tree cover treecover_threshold threshold tree cover output_folder folder save output rasters treecover_files List tree cover files lossyear_files List forest loss files treecover_ids IDs tree cover files lossyear_ids IDs forest loss files baseline Baseline year tree cover dataset (2000 2010)","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/process_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a single pair of tree cover and forest loss files â process_pair","text":"file path geotiff raster representing computed tree cover","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/rf1.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Forest model for tree measurement uncertainty prediction â rf1","title":"Random Forest model for tree measurement uncertainty prediction â rf1","text":"pre-trained Random Forest model predicts tree measurement uncertainty based plot-level characteristics.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/rf1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Random Forest model for tree measurement uncertainty prediction â rf1","text":"random forest model object predicting tree measurement uncertainty","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/rf1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random Forest model for tree measurement uncertainty prediction â rf1","text":"model takes following inputs: agb -ground biomass tons per hectare (AGB_T_HA) size Plot size square meters (SIZE_HA converted mÂ²) gez Global Ecological Zone factor levels: \"Boreal\", \"Subtropical\", \"Temperate\", \"Tropical\"","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/rf1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Forest model for tree measurement uncertainty prediction â rf1","text":"","code":"# Load the model rf1_path <- sample_file(\"rf1.RData\") load(rf1_path) print(rf1) #> Ranger result #>  #> Call: #>  ranger(sd ~ ., data = df1, importance = \"permutation\")  #>  #> Type:                             Regression  #> Number of trees:                  500  #> Sample size:                      196476  #> Number of independent variables:  3  #> Mtry:                             1  #> Target node size:                 5  #> Variable importance mode:         permutation  #> Splitrule:                        variance  #> OOB prediction error (MSE):       65.30938  #> R squared (OOB):                  0.653502   # Format input data plotsPred <- data.frame(   agb = c(150, 200),   size = c(10000, 25000), # in mÂ²   gez = factor(c(\"Tropical\", \"Temperate\"),                levels = c(\"Boreal\", \"Subtropical\", \"Temperate\", \"Tropical\")) ) print(plotsPred) #>   agb  size       gez #> 1 150 10000  Tropical #> 2 200 25000 Temperate  # Predict measurement uncertainty sdTree <- predict(rf1, plotsPred)$predictions print(sdTree) #> [1] 22.12851 19.19068"},{"path":"https://atnt.github.io/Plot2Map/reference/sampleAGBmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","title":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","text":"function samples block mean mapped Ground Biomass (AGB) given polygon. can use either custom AGB map provided input, download use ESA CCI BIOMASS AGB tiles, download use GEDI L4B Gridded Biomass data.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleAGBmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","text":"","code":"sampleAGBmap(   roi,   weighted_mean = FALSE,   agb_raster = NULL,   dataset = \"custom\",   esacci_biomass_year = \"latest\",   esacci_biomass_version = \"latest\",   esacci_folder = \"data/ESACCI-BIOMASS\",   gedi_l4b_folder = \"data/GEDI_L4B/\",   gedi_l4b_band = \"MU\",   gedi_l4b_resolution = 0.001,   n_cores = 1,   timeout = 600 )"},{"path":"https://atnt.github.io/Plot2Map/reference/sampleAGBmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","text":"roi sf SpatVector object representing Region Interest. weighted_mean Logical, TRUE weighted mean calculated considering approximate fraction cell covered roi (default FALSE). agb_raster SpatRaster object custom AGB map. NULL, either ESA CCI BIOMASS AGB tiles GEDI L4B data downloaded used. dataset Character, dataset use AGB estimation. Options \"custom\", \"esacci\", \"gedi\". Default \"custom\". esacci_biomass_year ESA CCI BIOMASS AGB tiles year use. Use either 2010, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 \"latest\" (default). esacci_biomass_version ESA CCI BIOMASS AGB tiles version use. Use either \"v2.0\", \"v3.0\", \"v4.0\", \"v5.0\", \"v5.01\", \"v6.0\" \"latest\" (default). esacci_folder Directory save downloaded ESA CCI BIOMASS AGB files. Default relative path \"data/ESACCI-BIOMASS\". gedi_l4b_folder Character, folder save downloaded GeoTIFF file. Default \"data/GEDI_L4B/\". gedi_l4b_band Character, band filter . See options Details section . Default \"MU\". gedi_l4b_resolution Numeric, spatial resolution processed output GeoTIFF degrees. native resolution GEDI L4B gridded dataset 1 km, approximately 0.001 degrees equator. Default 0.001. n_cores Number cores use parallel download. timeout Number seconds reaching file download timeout.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleAGBmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","text":"Numeric value representing mean AGB polygon.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleAGBmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","text":"Santoro, M.; Cartus, O. (2024): ESA Biomass Climate Change Initiative (Biomass_cci): Global datasets forest -ground biomass years 2010, 2015, 2016, 2017, 2018, 2019, 2020 2021, v5.01. NERC EDS Centre Environmental Data Analysis, 22 August 2024. Dubayah, R., et al. (2022). GEDI L4B Gridded Biomass Data, Version 2.1. NASA Earthdata.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleAGBmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample block mean mapped AGB over a region of interest â sampleAGBmap","text":"","code":"# Load required libraries library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE  # Define a region of interest (ROI) in the Congo Rainforest roi_congo <- st_polygon(list(rbind(   c(25.0089, 0.4735), c(25.0189, 0.4735),   c(25.0189, 0.4835), c(25.0089, 0.4835),   c(25.0089, 0.4735) ))) roi_sf_congo <- st_sfc(roi_congo, crs = 4326)  # Example 1: Calculate mean AGB for the Congo ROI using ESA CCI BIOMASS (unweighted) if (FALSE) { # \\dontrun{ sampleAGBmap(roi_sf_congo, dataset = \"esacci\") } # }  # Example 2: Calculate mean AGB for the Congo ROI using GEDI L4B (weighted) if (FALSE) { # \\dontrun{ sampleAGBmap(roi_sf_congo, dataset = \"gedi\", weighted_mean = TRUE) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/sampleTreeCover.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","title":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","text":"function samples block mean mapped forest cover given polygon. can use either custom forest cover mask provided input download use Global Forest Change (GFC) tree cover tiles (Hansen et al., 2013).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleTreeCover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","text":"","code":"sampleTreeCover(   roi,   thresholds,   forest_mask = NULL,   weighted_mean = FALSE,   gfc_folder = \"data/GFC\",   gfc_dataset_year = \"latest\" )"},{"path":"https://atnt.github.io/Plot2Map/reference/sampleTreeCover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","text":"roi sf SpatVector object representing Region Interest. thresholds Numeric vector tree cover thresholds percentages (e.g., c(10, 20, 30)) calculate forest cover percentages. forest_mask SpatRaster object custom forest cover mask. NULL, Hansen GFC tree cover tiles downloaded used. weighted_mean Logical, TRUE weighted mean calculated considering approximate fraction cell covered roi (default FALSE). gfc_folder Character string specifying directory download GFC data. gfc_dataset_year Numeric value describing version Hansen data use: year 2018-2023 range \"latest\" (default).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleTreeCover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","text":"Numeric value representing mean forest cover polygon.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleTreeCover.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","text":"M. C. Hansen et al., High-Resolution Global Maps 21st-Century Forest Cover Change. Science342,850-853(2013). DOI:10.1126/science.1244693","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sampleTreeCover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample block mean mapped forest cover over a region of interest â sampleTreeCover","text":"","code":"# Load required libraries library(sf)  # Define a region of interest (ROI) in the Daintree forest roi_daintree <- st_polygon(list(rbind(c(145.3833, -16.2500), c(145.3933, -16.2500),                                       c(145.3933, -16.2400), c(145.3833, -16.2400),                                       c(145.3833, -16.2500)))) roi_sf_daintree <- st_sfc(roi_daintree, crs = 4326)  # Example 1: Calculate forest cover (unweighted) if (FALSE) { # \\dontrun{ sampleTreeCover(roi_sf_daintree, thresholds = c(10, 20, 30)) } # }  # Example 2: Calculate forest cover (weighted) if (FALSE) { # \\dontrun{ sampleTreeCover(roi_sf_daintree, thresholds = c(10, 20, 30), weighted_mean = TRUE) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/sample_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to example sample file â sample_file","title":"Get path to example sample file â sample_file","text":"package comes bundled number sample files inst/extdata directory. function make easy access","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sample_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to example sample file â sample_file","text":"","code":"sample_file(file = NULL)"},{"path":"https://atnt.github.io/Plot2Map/reference/sample_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to example sample file â sample_file","text":"file Name file. NULL, sample files listed.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sample_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to example sample file â sample_file","text":"","code":"if (FALSE) { # \\dontrun{ sample_file() sample_file(\"SampleUnformattedPlots.csv\") } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/sample_lidar_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to example sample lidar folder â sample_lidar_folder","title":"Get path to example sample lidar folder â sample_lidar_folder","text":"package comes bundled number sample files inst/extdata directory. function make easy access","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sample_lidar_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to example sample lidar folder â sample_lidar_folder","text":"","code":"sample_lidar_folder(folder)"},{"path":"https://atnt.github.io/Plot2Map/reference/sample_lidar_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to example sample lidar folder â sample_lidar_folder","text":"folder Name folder within extdata directory.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sample_lidar_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to example sample lidar folder â sample_lidar_folder","text":"","code":"if (FALSE) { # \\dontrun{ sample_lidar_folder(\"SustainableLandscapeBrazil_v04/SLB_AGBmaps\") } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/sd_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate AGB and standard deviations from tree-level data â sd_tree","title":"Calculate AGB and standard deviations from tree-level data â sd_tree","text":"function calculates plot-level Ground Biomass (AGB) Standard Deviation using tree-level data plot locations. uses BIOMASS package AGB calculation standard deviation estimation.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sd_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate AGB and standard deviations from tree-level data â sd_tree","text":"","code":"sd_tree(plot, xy, region = \"World\")"},{"path":"https://atnt.github.io/Plot2Map/reference/sd_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate AGB and standard deviations from tree-level data â sd_tree","text":"plot data frame containing tree-level data. Must include following columns: id Unique identifier tree plot (character numeric). diameter Diameter breast height (DBH) trees centimeters (numeric). genus Genus tree species (character). species Species tree (character). height Tree height meters (optional, numeric). xy data frame containing plot location data. Must include following columns: id Unique identifier plot (character numeric). x X-coordinate plot location (numeric). y Y-coordinate plot location (numeric). size Plot size square meters (numeric). year Year measurement survey (numeric). region Region (vector region) interest sample. default, Region set 'World', can restrict WD estimates single region : AfricaExtraTrop: Africa (extra tropical) AfricaTrop: Africa (tropical) Australia: Australia AustraliaTrop: Australia (tropical) CentralAmericaTrop: Central America (tropical) China: China Europe: Europe India: India Madagascar: Madagascar Mexico: Mexico NorthAmerica: North America Oceania: Oceania SouthEastAsia: South-East Asia SouthEastAsiaTrop: South-East Asia (tropical) SouthAmericaExtraTrop: South America (extra tropical) SouthAmericaTrop: South America (tropical) World: World","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sd_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate AGB and standard deviations from tree-level data â sd_tree","text":"data frame plot-level AGB estimates standard deviations, including columns: PLOT_ID Unique identifier plot. POINT_X X-coordinate plot location. POINT_Y Y-coordinate plot location. SIZE_HA Plot size hectares. AVG_YEAR Average year measurement across trees plot. AGB_T_HA Ground Biomass scaled tons per hectare. sdTree Standard deviation AGB within plot.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sd_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate AGB and standard deviations from tree-level data â sd_tree","text":"function performs following steps: Filters trees diameter >= 10cm. Corrects taxonomy retrieves wood density data. Computes uses provided tree height data. Runs Monte Carlo simulation AGB estimation. Calculates plot-level AGB standard deviation. Scales values per hectare.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sd_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate AGB and standard deviations from tree-level data â sd_tree","text":"","code":"plotsTree <- utils::read.csv(sample_file(\"SampleTree.csv\")) head(plotsTree) #>     id      genus    species  diameter  size                 fez      gez year #> 1 BSP1 Terminalia  bellirica  3.501409 10000 tropical rainforest tropical 1996 #> 2 BSP1   Ziziphus   oenoplia  3.819719 10000 tropical rainforest tropical 1996 #> 3 BSP1    Aporosa lindleyana 16.870424 10000 tropical rainforest tropical 1996 #> 4 BSP1      Ixora  brachiata  4.138029 10000 tropical rainforest tropical 1996 #> 5 BSP1   Wrightia    arborea  5.411268 10000 tropical rainforest tropical 1996 #> 6 BSP1      Ixora  brachiata  3.183099 10000 tropical rainforest tropical 1996  xyTree <- utils::read.csv(sample_file(\"SampleTreeXY.csv\")) head(xyTree) #>     id        y        x #> 1 BSP1 14.36806 74.91944 #> 2 BSP1 14.36806 74.91944 #> 3 BSP1 14.36806 74.91944 #> 4 BSP1 14.36806 74.91944 #> 5 BSP1 14.36806 74.91944 #> 6 BSP1 14.36806 74.91944  plot_uncertainties <- sd_tree(plotsTree, xyTree, region = \"India\") #> Warning: DRYAD data only stored 289 wood density values in your region of interest. You could provide additional wood densities (parameter addWoodDensityData) or widen your region (region=\"World\") #> The reference dataset contains 289 wood density values #> Your taxonomic table contains 340 taxa #> No tree height data found in original plot data. Calculating height using BIOMASS height-diameter model. head(plot_uncertainties) #>   PLOT_ID  POINT_X  POINT_Y SIZE_HA AVG_YEAR  AGB_T_HA    sdTree #> 1    BSP1 74.91944 14.36806       1     1996 158.06834  9.807798 #> 2   BSP10 74.69861 14.94722       1     1996 417.99472 22.585124 #> 3  BSP100 75.82000 13.54722       1     1996  41.25254  3.934893 #> 4  BSP101 75.43444 13.72639       1     1996 348.63751 38.003134 #> 5  BSP102 74.88833 13.92361       1     1996 516.82368 39.705160 #> 6  BSP104 74.90917 13.87000       1     1996 700.53039 74.854013"},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_df_with_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert sf object to dataframe with longitude and latitude columns â sf_to_df_with_coords","title":"Convert sf object to dataframe with longitude and latitude columns â sf_to_df_with_coords","text":"function takes sf object converts data frame, adding \"POINT_X\" \"POINT_Y\" columns longitude latitude. input sf object WGS 84, transformed.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_df_with_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert sf object to dataframe with longitude and latitude columns â sf_to_df_with_coords","text":"","code":"sf_to_df_with_coords(sf_object)"},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_df_with_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert sf object to dataframe with longitude and latitude columns â sf_to_df_with_coords","text":"sf_object sf object POINT geometry","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_df_with_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert sf object to dataframe with longitude and latitude columns â sf_to_df_with_coords","text":"data frame original columns plus POINT_X POINT_Y WGS 84 CRS.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_df_with_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert sf object to dataframe with longitude and latitude columns â sf_to_df_with_coords","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) # Assuming 'sampled_plots$non_deforested_plots' is your sf object df <- sf_to_df_with_coords(sampled_plots$non_deforested_plots) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_sf_with_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Add longitude and latitude columns to an sf object â sf_to_sf_with_coords","title":"Add longitude and latitude columns to an sf object â sf_to_sf_with_coords","text":"function takes sf object containing point geometries extracts longitude (POINT_X) latitude (POINT_Y) coordinates geometry column. coordinates added new columns sf object.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_sf_with_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add longitude and latitude columns to an sf object â sf_to_sf_with_coords","text":"","code":"sf_to_sf_with_coords(sf_object)"},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_sf_with_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add longitude and latitude columns to an sf object â sf_to_sf_with_coords","text":"sf_object sf object containing point geometries.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_sf_with_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add longitude and latitude columns to an sf object â sf_to_sf_with_coords","text":"updated sf object additional columns: POINT_X (longitude) POINT_Y (latitude).","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/sf_to_sf_with_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add longitude and latitude columns to an sf object â sf_to_sf_with_coords","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) # Example sf object sampled_plots <- st_as_sf(data.frame(   PLOT_ID = c(\"EU2\", \"EU1\"),   AGB_T_HA = c(87.87, 67.79),   AVG_YEAR = c(2001, 2008),   SIZE_HA = c(0.196, 0.015),   geometry = st_sfc(st_point(c(1.305915, 42.59214)), st_point(c(15.21873, 59.81792))) ), crs = 4326)  # Convert to include POINT_X and POINT_Y updated_sf <- sf_to_sf_with_coords(sampled_plots) } # }"},{"path":"https://atnt.github.io/Plot2Map/reference/validate_esacci_biomass_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function used for args validation â validate_esacci_biomass_args","title":"Helper function used for args validation â validate_esacci_biomass_args","text":"Helper function used args validation","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/validate_esacci_biomass_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function used for args validation â validate_esacci_biomass_args","text":"","code":"validate_esacci_biomass_args(esacci_biomass_year, esacci_biomass_version)"},{"path":"https://atnt.github.io/Plot2Map/reference/verify_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify downloaded GFC tile file integrity â verify_download","title":"Verify downloaded GFC tile file integrity â verify_download","text":"Checks downloaded file size matches remote file size.","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/verify_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify downloaded GFC tile file integrity â verify_download","text":"","code":"verify_download(tile_url, local_path)"},{"path":"https://atnt.github.io/Plot2Map/reference/verify_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify downloaded GFC tile file integrity â verify_download","text":"tile_url URL remote file local_path Path local downloaded file","code":""},{"path":"https://atnt.github.io/Plot2Map/reference/verify_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify downloaded GFC tile file integrity â verify_download","text":"Integer: 0 verification passed, 3 failed","code":""}]
